[{"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\index.js":"1","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\reportWebVitals.js":"2","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\App.js":"3","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\NavBar.js":"4","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\DiscoverPage.js":"5","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits.js":"6","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage.js":"7","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\CreditsPerson.js":"8","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieCard.js":"9","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieSlider.js":"10","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\RatingWheel.js":"11","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\Review.js":"12","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopBilledCast.js":"13","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopMovie.js":"14","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\MoviePage.js":"15","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorPage.js":"16","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCredits.js":"17","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\SideInfo.js":"18","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Footer.js":"19","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\kategorieTeilung.js":"20","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SearchContext.js":"21"},{"size":288,"mtime":1610025570334,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1826,"mtime":1610643631799,"results":"25","hashOfConfig":"23"},{"size":6371,"mtime":1610669962066,"results":"26","hashOfConfig":"23"},{"size":2578,"mtime":1610669204964,"results":"27","hashOfConfig":"23"},{"size":3462,"mtime":1610623189037,"results":"28","hashOfConfig":"23"},{"size":4171,"mtime":1610632736653,"results":"29","hashOfConfig":"23"},{"size":1487,"mtime":1610623156476,"results":"30","hashOfConfig":"23"},{"size":3511,"mtime":1610646540973,"results":"31","hashOfConfig":"23"},{"size":836,"mtime":1610485426393,"results":"32","hashOfConfig":"23"},{"size":1780,"mtime":1610408225015,"results":"33","hashOfConfig":"23"},{"size":2145,"mtime":1610550051527,"results":"34","hashOfConfig":"23"},{"size":3240,"mtime":1610545448047,"results":"35","hashOfConfig":"23"},{"size":3740,"mtime":1610585055215,"results":"36","hashOfConfig":"23"},{"size":4832,"mtime":1610582880124,"results":"37","hashOfConfig":"23"},{"size":6201,"mtime":1610664854139,"results":"38","hashOfConfig":"23"},{"size":2208,"mtime":1610584807308,"results":"39","hashOfConfig":"23"},{"size":3615,"mtime":1610666591723,"results":"40","hashOfConfig":"23"},{"size":535,"mtime":1610548976483,"results":"41","hashOfConfig":"23"},{"size":1325,"mtime":1610580338764,"results":"42","hashOfConfig":"23"},{"size":1309,"mtime":1610644302772,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1o4rh33",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"46"},"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\index.js",[],["103","104"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\reportWebVitals.js",[],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\App.js",["105","106","107"],"import \"./App.css\";\nimport DiscoverPage from \"./components/DiscoverPage\";\nimport NavBar from \"./components/NavBar\";\nimport MoviePage from \"./components/MovieDetails/MoviePage\";\n// import { Context } from \"./contexts/Context\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Credits from \"./components/Credits\";\nimport ActorPage from \"./components/ActorPage/ActorPage\";\nimport LandingPage from \"./components/LandingPage\";\nimport { CssBaseline, createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Footer from \"./components/Footer\";\nimport \"./linkStyle.scss\";\nimport SearchProvider from \"./contexts/SearchContext\";\n\nimport { blue, red } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  pallete: {\n    primary: red,\n  },\n});\n\nfunction App() {\n  const [showMoviesMode, setShowMoviesMode] = useState(\"popularity\");\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <SearchProvider>\n            <NavBar />\n\n            <Switch>\n              <Route path=\"/\" exact>\n                <LandingPage />\n              </Route>\n              <Route path=\"/discover\" component={DiscoverPage}>\n                <DiscoverPage />\n              </Route>\n              <Route path=\"/details/:movieId\" component={MoviePage}>\n                <MoviePage />\n              </Route>\n              <Route path=\"/credits/:movieId\" component={Credits}>\n                <Credits />\n              </Route>\n              <Route path=\"/actor/:actorId\" component={ActorPage}>\n                <ActorPage />\n              </Route>\n            </Switch>\n          </SearchProvider>\n\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\NavBar.js",["108","109","110","111","112","113","114","115","116"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\DiscoverPage.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits.js",["130","131"],"import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { CreditPerson } from \"./CreditsPerson\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { kategorieTeilung } from \"./kategorieTeilung\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst Credits = () => {\r\n  let history = useHistory();\r\n  const credits = history.location.state.credits;\r\n\r\n  //crew categories\r\n\r\n  const categories = kategorieTeilung(credits);\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginTop: \"30px\",\r\n      }}\r\n    >\r\n      <div style={{ width: \"50%\" }}>\r\n        <Typography variant=\"h6\">Actors</Typography>\r\n        {credits.cast.map((actor) => (\r\n          <CreditPerson credits={actor} />\r\n        ))}\r\n      </div>\r\n      <div style={{ width: \"50%\" }}>\r\n        {categories.art.length !== 0 && (\r\n          <Typography variant=\"h6\">Art</Typography>\r\n        )}\r\n        {categories.art.map((art) => (\r\n          <CreditPerson credits={art} />\r\n        ))}\r\n        {categories.camera.length !== 0 && (\r\n          <Typography variant=\"h6\">Camera</Typography>\r\n        )}\r\n        {categories.camera.map((camera) => (\r\n          <CreditPerson credits={camera} />\r\n        ))}\r\n        {categories.crewMembers.length !== 0 && (\r\n          <Typography variant=\"h6\">Crew Members</Typography>\r\n        )}\r\n        {categories.crewMembers.map((crewMembers) => (\r\n          <CreditPerson credits={crewMembers} />\r\n        ))}\r\n\r\n        {categories.costume.length !== 0 && (\r\n          <Typography variant=\"h6\">Costume & Make-Up</Typography>\r\n        )}\r\n        {categories.costume.map((costume) => (\r\n          <CreditPerson credits={costume} />\r\n        ))}\r\n        {categories.directing.length !== 0 && (\r\n          <Typography variant=\"h6\">Directing</Typography>\r\n        )}\r\n        {categories.directing.map((directing) => (\r\n          <CreditPerson credits={directing} />\r\n        ))}\r\n        {categories.editing.length !== 0 && (\r\n          <Typography variant=\"h6\">Editing</Typography>\r\n        )}\r\n        {categories.editing.map((editing) => (\r\n          <CreditPerson credits={editing} />\r\n        ))}\r\n        {categories.lighting.length !== 0 && (\r\n          <Typography variant=\"h6\">Lighting</Typography>\r\n        )}\r\n        {categories.lighting.map((lighting) => (\r\n          <CreditPerson credits={lighting} />\r\n        ))}\r\n        {categories.production.length !== 0 && (\r\n          <Typography variant=\"h6\">Production</Typography>\r\n        )}\r\n        {categories.production.map((production) => (\r\n          <CreditPerson credits={production} />\r\n        ))}\r\n        {categories.sound.length !== 0 && (\r\n          <Typography variant=\"h6\"> Sound</Typography>\r\n        )}\r\n        {categories.sound.map((sound) => (\r\n          <CreditPerson credits={sound} />\r\n        ))}\r\n        {categories.visualEffects.length !== 0 && (\r\n          <Typography variant=\"h6\">Visual Effects</Typography>\r\n        )}\r\n        {categories.visualEffects.map((visualEffects) => (\r\n          <CreditPerson credits={visualEffects} />\r\n        ))}\r\n        {categories.writing.length !== 0 && (\r\n          <Typography variant=\"h6\">Writing</Typography>\r\n        )}\r\n\r\n        {categories.writing.map((writing) => (\r\n          <CreditPerson credits={writing} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage.js",["132","133","134"],"import React, { useEffect, useState } from \"react\";\r\nimport MovieSlider from \"./MovieSlider\";\r\nimport axios from \"axios\";\r\nimport { Container, Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"../linkStyle.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    marginTop: \"25px\",\r\n  },\r\n});\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [moviesToday, setMoviesToday] = useState([]);\r\n  const [thisWeekMovies, setThisWeekMovies] = useState([]);\r\n  const [upcoming, setUpcoming] = useState([]);\r\n  const [isRendered, setIsRendered] = useState(false);\r\n  console.log(\"UPCOMING\", upcoming);\r\n\r\n  const items = [\r\n    {\r\n      name: \"something\",\r\n      description: \"something else\",\r\n    },\r\n    {\r\n      name: \"something\",\r\n      description: \"something else\",\r\n    },\r\n  ];\r\n  const getLandingPage = async () => {\r\n    const topRated = await axios.get(\r\n      \"http://localhost:5000/landingPage/top_rated\"\r\n    );\r\n    setTopRated(topRated.data.results);\r\n\r\n    const moviesToday = await axios.get(\r\n      \"http://localhost:5000/landingPage/this_day/movies\"\r\n    );\r\n    setMoviesToday(moviesToday.data.results);\r\n\r\n    const thisWeekMovies = await axios.get(\r\n      \"http://localhost:5000/landingPage/this_week/movies\"\r\n    );\r\n    setThisWeekMovies(thisWeekMovies.data.results);\r\n\r\n    const upcoming = await axios.get(\r\n      \"http://localhost:5000/landingPage/upcoming\"\r\n    );\r\n    setUpcoming(\r\n      upcoming.data.results\r\n        .sort((upcoming1, upcoming2) =>\r\n          upcoming1.popularity < upcoming2.popularity ? 1 : -1\r\n        )\r\n        .slice(0, 8)\r\n    );\r\n    setIsRendered(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLandingPage();\r\n  }, []);\r\n  console.log(\"upcoming\", upcoming);\r\n  return (\r\n    isRendered && (\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <div style={{ width: \"780px\", margin: \"auto\" }}>\r\n          <Carousel animation=\"slide\" interval=\"8000\">\r\n            {upcoming.map((movie, i) => (\r\n              <Link\r\n                props={movie.id}\r\n                to={`/details/${movie.id}`}\r\n                style={{ textDecoration: \"none\", color: \"White\" }}\r\n              >\r\n                <Paper\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    backgroundImage: `url(https://image.tmdb.org/t/p/w780/${movie.backdrop_path})`,\r\n                    height: \"438px\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      alignSelf: \"flex-end\",\r\n                      backgroundColor: \"rgba(0, 0, 0, 0.4)\",\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      className=\"hoverLink\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        margin: \"15px\",\r\n                        fontWeight: 500,\r\n                        \"&:hover\": { color: \"black\" },\r\n                      }}\r\n                    >\r\n                      {movie.title}\r\n                    </Typography>\r\n                  </div>\r\n                </Paper>\r\n              </Link>\r\n            ))}\r\n          </Carousel>\r\n        </div>\r\n        <Container style={{ marginTop: \"20px\" }}>\r\n          <Typography variant=\"h3\" className={classes.header}>\r\n            Movies Today\r\n          </Typography>\r\n          <MovieSlider props={moviesToday} />\r\n          <Typography variant=\"h3\" className={classes.header}>\r\n            Movies This Week\r\n          </Typography>\r\n          <MovieSlider props={thisWeekMovies} />\r\n          <Typography variant=\"h3\" className={classes.header}>\r\n            Top Rated\r\n          </Typography>\r\n          <MovieSlider props={topRated} />\r\n        </Container>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\CreditsPerson.js",["135","136","137"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport \"../linkStyle.scss\";\r\nimport profilePicHolder from \"../images/profile_pic_holder2.png\";\r\nexport const CreditPerson = ({ credits }) => {\r\n  console.log(credits);\r\n  return (\r\n    <div style={{ display: \"flex\", margin: \"20px 20px 20px 0\" }}>\r\n      <Link\r\n        style={{\r\n          textDecoration: \"none\",\r\n          color: \"black\",\r\n          display: \"flex\",\r\n        }}\r\n        to={{\r\n          pathname: `/actor/${credits.id}`,\r\n        }}\r\n      >\r\n        {credits.profile_path ? (\r\n          <img\r\n            style={{ borderRadius: \"5px\" }}\r\n            src={`https://www.themoviedb.org/t/p/w66_and_h66_face/${credits.profile_path}`}\r\n          ></img>\r\n        ) : (\r\n          <img\r\n            style={{ width: \"66px\", height: \"66px\", borderRadius: \"5px\" }}\r\n            src={profilePicHolder}\r\n          ></img>\r\n        )}\r\n      </Link>\r\n      <Typography style={{ alignSelf: \"center\", marginLeft: \"15px\" }}>\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={{\r\n            pathname: `/actor/${credits.id}`,\r\n          }}\r\n        >\r\n          <Typography className=\"hoverLink\"> {credits.name}</Typography>\r\n        </Link>\r\n        <Typography variant=\"subtitle2\">\r\n          {credits.character ? credits.character : credits.job}\r\n        </Typography>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieCard.js",["138","139","140","141"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  CardActionArea,\r\n  ButtonGroup,\r\n  Button,\r\n  Container,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport RatingWheel from \"./RatingWheel\";\r\nconst MovieCard = ({ movie, imgWidth, imgHeight }) => {\r\n  let borderRadius;\r\n  let height;\r\n  let shadow;\r\n  if (imgWidth === \"200\") {\r\n    borderRadius = 0;\r\n    height = 365;\r\n    shadow = \"5px 5px 18px #DAD7D7\";\r\n  } else {\r\n    shadow = \"none\";\r\n    borderRadius = 5;\r\n    height = \"auto\";\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      overflow: \"visible\",\r\n      height: `${height}px`,\r\n      justifySelf: \"center\",\r\n      margin: \"15px\",\r\n      position: \"relative\",\r\n      boxShadow: `${shadow}`,\r\n      padding: 0,\r\n    },\r\n    cardMedia: {\r\n      width: `${imgWidth}px`,\r\n      height: `${imgHeight}px`,\r\n      borderRadius: `${borderRadius}px`,\r\n    },\r\n  });\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} key={movie.id}>\r\n      {imgWidth === \"200\" ? (\r\n        <RatingWheel\r\n          rating={movie.vote_average * 10}\r\n          discover={true}\r\n        ></RatingWheel>\r\n      ) : (\r\n        <RatingWheel rating={movie.vote_average * 10}></RatingWheel>\r\n      )}\r\n\r\n      <ClickAwayListener onClickAway={() => setDropDown(false)}>\r\n        <IconButton\r\n          onClick={() => setDropDown(true)}\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"1px\",\r\n            padding: \"0px\",\r\n            top: \"5px\",\r\n          }}\r\n        >\r\n          {dropDown || <MoreVertIcon />}\r\n          {dropDown && (\r\n            <ButtonGroup\r\n              variant=\"contained\"\r\n              orientation=\"vertical\"\r\n              color=\"primary\"\r\n              aria-label=\"vertical outlined primary button group\"\r\n            >\r\n              <Button>Watchlist</Button>\r\n              <Button>Favorite</Button>\r\n              <Button>Rate</Button>\r\n            </ButtonGroup>\r\n          )}\r\n        </IconButton>\r\n      </ClickAwayListener>\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/details/${movie.id}`,\r\n        }}\r\n      >\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={`https://image.tmdb.org/t/p/w${imgWidth}${movie.poster_path}`}\r\n          title={movie.title}\r\n        ></CardMedia>\r\n      </Link>\r\n      <CardContent style={{ padding: \"0px\", marginLeft: \"3px\" }}>\r\n        <Link\r\n          props={movie.id}\r\n          to={`/details/${movie.id}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Typography\r\n            className=\"hoverLink\"\r\n            variant=\"body2\"\r\n            color=\"textPrimary\"\r\n            component=\"p\"\r\n            style={{\r\n              \"&:hover\": { cursor: \"pointer\" },\r\n              marginTop: \"3px\",\r\n            }}\r\n          >\r\n            {movie.title}\r\n          </Typography>\r\n        </Link>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          style={{ verticalAlign: \"text-bottom\" }}\r\n        >\r\n          {movie.release_date && movie.release_date.slice(0, 4)}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieSlider.js",["142","143","144","145","146","147","148","149"],"import React, { useState } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst MovieSlider = ({ props }) => {\r\n  const [isRendered, setIsRendered] = useState(props);\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      m={5}\r\n      bgcolor=\"background.paper\"\r\n      height=\"auto\"\r\n      style={{\r\n        margin: \"0\",\r\n        marginTop: \"15px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        overflowY: \"hidden\",\r\n        paddingBottom: \"none\",\r\n      }}\r\n    >\r\n      {props.map((movie) => (\r\n        <MovieCard movie={movie} imgHeight=\"231\" imgWidth=\"154\" />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MovieSlider;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\RatingWheel.js",["150"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nexport const RatingWheel = ({ rating, discover }) => {\r\n  const canvasRef = useRef(null);\r\n  const radius = (2 / 100) * rating;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 6;\r\n    if (radius) {\r\n      if (rating < 55) {\r\n        ctx.strokeStyle = \"orange\";\r\n      } else if (rating <= 30) {\r\n        ctx.strokeStyle = \"gray\";\r\n      } else {\r\n        ctx.strokeStyle = \"green\";\r\n      }\r\n\r\n      ctx.arc(18, 18, 15, 0, radius * Math.PI);\r\n      ctx.stroke();\r\n    } else {\r\n      ctx.strokeStyle = \"red\";\r\n      ctx.arc(18, 18, 15, 0, 2 * Math.PI);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(18, 18, 15, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n\r\n    ctx.fillStyle = \"white\";\r\n    if (rating) {\r\n      ctx.font = \"12px Arial\";\r\n      ctx.fillText(`${rating}%`, 7, 23, 36);\r\n    } else {\r\n      ctx.font = \"14px Arial\";\r\n      ctx.fillText(`NR`, 7, 23, 36);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {discover ? (\r\n        <canvas\r\n          width=\"36px\"\r\n          height=\"36px\"\r\n          ref={canvasRef}\r\n          {...rating}\r\n          style={{\r\n            borderColor: \"blue\",\r\n            position: \"absolute\",\r\n            top: \"260px\",\r\n            right: \"162px\",\r\n          }}\r\n        ></canvas>\r\n      ) : (\r\n        <canvas\r\n          width=\"36px\"\r\n          height=\"36px\"\r\n          ref={canvasRef}\r\n          {...rating}\r\n          style={{\r\n            borderColor: \"blue\",\r\n            position: \"absolute\",\r\n            top: \"191px\",\r\n            right: \"115px\",\r\n          }}\r\n        ></canvas>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default RatingWheel;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\Review.js",["151"],"import React, { useState } from \"react\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  readBtn: {\r\n    border: \"none\",\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Review = ({ reviews }) => {\r\n  const [clamped, setClamped] = useState(true);\r\n  console.log(reviews);\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper\r\n      style={{\r\n        display: \"flex\",\r\n        marginTop: \"35px\",\r\n        marginLeft: \"10px\",\r\n        overflow: \"hidden\",\r\n\r\n        margin: \"20px auto 0 auto\",\r\n      }}\r\n    >\r\n      <div>\r\n        <img\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            margin: \"10px 15px 0 10px\",\r\n            width: \"60px\",\r\n          }}\r\n          src={`https://secure.gravatar.com/avatar/${reviews.author_details.avatar_path}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"10px\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Typography variant=\"subtitle1\">{reviews.author}</Typography>\r\n          {reviews.author_details.rating && (\r\n            <Typography> {reviews.author_details.rating}</Typography>\r\n          )}\r\n        </div>\r\n        <Typography variant=\"subtitle2\">\r\n          Created at: {reviews.created_at.slice(0, 10)}\r\n        </Typography>\r\n        {clamped ? (\r\n          <Typography variant=\"body2\">\r\n            {reviews.content.slice(0, 400)}...\r\n            <button\r\n              onClick={() => setClamped(false)}\r\n              className={classes.readBtn}\r\n            >\r\n              Read More\r\n            </button>\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"body2\">\r\n            {reviews.content}\r\n            <button\r\n              onClick={() => setClamped(true)}\r\n              className={classes.readBtn}\r\n            >\r\n              Read Less\r\n            </button>\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Review;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopBilledCast.js",["152","153","154","155"],"import React from \"react\";\r\nimport { Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { useParams, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nconst useStyles = makeStyles({\r\n  actorImage: {\r\n    borderRadius: \"5px 5px 0 0\",\r\n  },\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(30%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  actorPaper: {\r\n    margin: \"10px\",\r\n  },\r\n  acotrSubtitle: {\r\n    fontSize: \"12px\",\r\n\r\n    fontWeight: \"bold\",\r\n    color: \"#757575\",\r\n  },\r\n  textStyle: {\r\n    margin: \"5px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nconst TopBilledCast = ({ topBilledCast, movieDetails, credits }) => {\r\n  const classes = useStyles();\r\n\r\n  return topBilledCast.length > 0 ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n\r\n        overflowX: \"scroll\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {topBilledCast.map((actor) => (\r\n        <Paper className={classes.actorPaper}>\r\n          {actor.profile_path ? (\r\n            <Link\r\n              to={{\r\n                pathname: `/actor/${actor.id}`,\r\n              }}\r\n            >\r\n              <img\r\n                className={classes.actorImage}\r\n                src={`https://www.themoviedb.org/t/p/w138_and_h175_face/${actor.profile_path}`}\r\n              ></img>\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              to={{\r\n                pathname: `/actor/${actor.id}`,\r\n              }}\r\n            >\r\n              <img\r\n                style={{ width: \"138px\", height: \"175px\" }}\r\n                className={classes.actorImage}\r\n                src={`https://it.fitnyc.edu/wp-content/uploads/2018/01/Untitled-design.png`}\r\n              ></img>\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n            }}\r\n            to={{\r\n              pathname: `/actor/${actor.id}`,\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{ margin: \"0 6px 0 6px\" }}\r\n              variant=\"body2\"\r\n              className=\"hoverLink\"\r\n            >\r\n              {actor.original_name}\r\n            </Typography>\r\n          </Link>\r\n          <Typography\r\n            style={{ margin: \"0 6px 0 6px\" }}\r\n            variant=\"caption\"\r\n            classes={{\r\n              caption: classes.acotrSubtitle,\r\n            }}\r\n          >\r\n            {actor.character}\r\n          </Typography>\r\n        </Paper>\r\n      ))}\r\n      <div style={{ display: \"flex\", alignSelf: \"center\" }}>\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: `/credits/${movieDetails.id}`,\r\n            state: {\r\n              credits: credits,\r\n            },\r\n          }}\r\n        >\r\n          <Button style={{ width: \"150px\" }}>\r\n            <NavigateNextIcon />\r\n            Show Cast\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Typography>No Cast</Typography>\r\n  );\r\n};\r\n\r\nexport default TopBilledCast;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopMovie.js",["156","157","158"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport image_holder from \"../../images/no_image_holder.png\";\r\nconst useStyles = makeStyles({\r\n  actorImage: {\r\n    borderRadius: \"5px 5px 0 0\",\r\n  },\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(30%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  maxWidthXl: {\r\n    padding: 0,\r\n    maxWidth: \"1170px\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#EEEEEE\",\r\n  },\r\n  actorPaper: {\r\n    margin: \"10px\",\r\n  },\r\n  acotrSubtitle: {\r\n    fontSize: \"12px\",\r\n\r\n    fontWeight: \"bold\",\r\n    color: \"#757575\",\r\n  },\r\n  textStyle: {\r\n    margin: \"5px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nconst TopMovie = ({ movieDetails, director }) => {\r\n  const classes = useStyles();\r\n  console.log(movieDetails);\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"632px\",\r\n        display: \"flex\",\r\n\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n\r\n          zIndex: 1,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {movieDetails.poster_path ? (\r\n          <img\r\n            style={{\r\n              borderRadius: \"5px\",\r\n            }}\r\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\r\n          ></img>\r\n        ) : (\r\n          <img\r\n            style={{\r\n              borderRadius: \"5px\",\r\n              width: \"300px\",\r\n              alt: \"me\",\r\n            }}\r\n            src={image_holder}\r\n          ></img>\r\n        )}\r\n\r\n        <div\r\n          style={{\r\n            color: \"white\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n\r\n            width: \"70%\",\r\n            paddingLeft: \"10px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" className={classes.textStyle}>\r\n            {movieDetails.original_title && movieDetails.original_title}\r\n            {movieDetails.release_date &&\r\n              \"(\" + movieDetails.release_date.slice(0, 4) + \")\"}\r\n          </Typography>\r\n\r\n          <Typography\r\n            component=\"div\"\r\n            className={classes.textStyle}\r\n            style={{\r\n              display: \"flex\",\r\n              padding: 0,\r\n              alignContent: \"flex-start\",\r\n            }}\r\n          >\r\n            {movieDetails.genres &&\r\n              movieDetails.genres.map((genre) => (\r\n                <p style={{ margin: 0, marginRight: \"5px\" }}>{genre.name}</p>\r\n              ))}\r\n          </Typography>\r\n\r\n          <Typography className={classes.textStyle}>\r\n            Rating:{\" \"}\r\n            {movieDetails.vote_average\r\n              ? movieDetails.vote_average * 10 + \"%\"\r\n              : \"Not Yet Rated\"}\r\n          </Typography>\r\n\r\n          <Typography className={classes.textStyle}>\r\n            {movieDetails.runtime > 0 &&\r\n              Math.floor(movieDetails.runtime / 60) + \"h\"}{\" \"}\r\n            {movieDetails.runtime > 0 && (movieDetails.runtime % 60) + \"m\"}\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.textStyle}>\r\n            Overview\r\n          </Typography>\r\n          <Typography className={classes.textStyle}>\r\n            {\" \"}\r\n            {movieDetails.overview}\r\n          </Typography>\r\n          <div>\r\n            {director && (\r\n              <div className={classes.textStyle}>\r\n                <Typography>Director</Typography>\r\n                <Typography>{director}</Typography>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopMovie;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\MoviePage.js",["159","160","161","162","163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Review from \"./Review\";\r\nimport { Container, Typography, Paper, Button, Grid } from \"@material-ui/core\";\r\nimport { useParams, useRouteMatch, Link } from \"react-router-dom\";\r\nimport RatingWheel from \"../RatingWheel\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport \"../../linkStyle.scss\";\r\nimport TopBilledCast from \"./TopBilledCast\";\r\nimport TopMovie from \"./TopMovie\";\r\nimport SideInfo from \"./SideInfo\";\r\nconst useStyles = makeStyles({\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(25%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  maxWidthXl: {\r\n    padding: 0,\r\n    maxWidth: \"1170px\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#FAFAFA\",\r\n  },\r\n});\r\n// DOPORUCENE FILMY + KEYWORDS NA PRAVEJ STRANE + DODATOCNE INFO K FILMU\r\nconst MoviePage = () => {\r\n  const classes = useStyles();\r\n\r\n  let match = useRouteMatch(\"/details/:id\");\r\n\r\n  const movieId = match.url.slice(9, match.url.length);\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n  const [reviews, setReviews] = useState([]);\r\n  const [credits, setCredits] = useState([]);\r\n  const [topBilledCast, setTopBilledCast] = useState([]);\r\n  const [director, setDirector] = useState(\"\");\r\n  const [lodaded, setLoaded] = useState(false);\r\n\r\n  console.log(\"heheh\", movieDetails);\r\n  async function fetchMovie() {\r\n    const details = await axios.get(\"http://localhost:5000/details\", {\r\n      params: { id: movieId },\r\n    });\r\n    const reviews = await axios.get(\"http://localhost:5000/details/reviews\", {\r\n      params: { id: movieId },\r\n    });\r\n    const credits = await axios.get(\"http://localhost:5000/details/credits\", {\r\n      params: { id: movieId },\r\n    });\r\n    console.log(\"BEFORE ASSIGN\", credits);\r\n    //filter to find top 10 cast by popularity\r\n\r\n    if (credits.data != \"Request failed with status code 404\") {\r\n      const topBilledCast = credits.data.cast\r\n        .sort((actor) => actor.popularity > actor.popularity)\r\n        .slice(0, 10);\r\n      setTopBilledCast(topBilledCast);\r\n      const director = credits.data.crew.filter(\r\n        (crew) => crew.job === \"Director\"\r\n      );\r\n      if (director.length > 0) {\r\n        setDirector(director[0].name);\r\n      }\r\n    }\r\n\r\n    //filter to find director\r\n\r\n    setCredits(credits.data);\r\n    setMovieDetails(details.data);\r\n    setReviews(reviews.data.results);\r\n\r\n    setLoaded(true);\r\n  }\r\n  console.log(movieDetails);\r\n  useEffect(() => {\r\n    fetchMovie();\r\n  }, []);\r\n  return (\r\n    lodaded && (\r\n      <div>\r\n        {movieDetails.backdrop_path ? (\r\n          <div\r\n            className={classes.backrop}\r\n            style={{\r\n              backgroundImage: `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${movieDetails.backdrop_path})`,\r\n            }}\r\n          ></div>\r\n        ) : (\r\n          <div\r\n            className={classes.backrop}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              width: \"1920px\",\r\n            }}\r\n          ></div>\r\n        )}\r\n        <Container className={classes.container} maxWidth=\"lg\">\r\n          <TopMovie movieDetails={movieDetails} director={director} />\r\n\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{\r\n              marginTop: \"20px\",\r\n              marginBottom: \"15px\",\r\n            }}\r\n          >\r\n            Top Billed Cast\r\n          </Typography>\r\n\r\n          <Grid container lg={12}>\r\n            <Grid item xs={9}>\r\n              <TopBilledCast\r\n                movieDetails={movieDetails}\r\n                topBilledCast={topBilledCast}\r\n                credits={credits}\r\n              ></TopBilledCast>\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={{\r\n                    pathname: `/credits/${movieDetails.id}`,\r\n                    state: {\r\n                      credits: credits,\r\n                    },\r\n                  }}\r\n                >\r\n                  <Button variant=\"contained\">show cast</Button>\r\n                </Link>\r\n              </div>\r\n              <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\r\n                Reviews {reviews && reviews.length}\r\n              </Typography>\r\n              {reviews &&\r\n                reviews.map((review) => (\r\n                  <Review reviews={review} movieDetails={movieDetails} />\r\n                ))}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <SideInfo movieId={movieDetails.id} movieDetails={movieDetails} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorPage.js",["165","166","167","168","169"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Credits from \"../Credits\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Typography, Grid } from \"@material-ui/core\";\r\nimport ActorCredits from \"./ActorCredits\";\r\nimport { kategorieTeilung } from \"../kategorieTeilung\";\r\nimport \"../../linkStyle.scss\";\r\nimport ProfilePicHolder from \"../../images/profile_pic_holder_long.png\";\r\nconst ActorPage = () => {\r\n  let { actorId } = useParams();\r\n\r\n  const [actorDetails, setActorDetails] = useState({});\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [allCredits, setAllCredits] = useState(undefined);\r\n  const [changedCredits, setChangedCredts] = useState(undefined);\r\n  const [creditsSortedByPopularity, setCreditsSortedByPopularity] = useState(\r\n    []\r\n  );\r\n  const [categories, setCategories] = useState({});\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const fetchActorDetails = async () => {\r\n    const actorDetails = await axios.get(\r\n      \"http://localhost:5000/details/actor\",\r\n      {\r\n        params: { actorId: actorId },\r\n      }\r\n    );\r\n\r\n    setActorDetails(actorDetails.data);\r\n  };\r\n\r\n  const fetchAllCredits = async () => {\r\n    const actorCredits = await axios.get(\r\n      \"http://localhost:5000/details/actor/credits/all\",\r\n      {\r\n        params: { actorId: actorId },\r\n      }\r\n    );\r\n    setAllCredits(actorCredits.data);\r\n  };\r\n\r\n  const sortByPopularity = () => {\r\n    console.log(allCredits);\r\n    const sortedCredits = allCredits.cast.sort((credit1, credit2) =>\r\n      credit1.popularity > credit2.popularity ? -1 : 1\r\n    );\r\n    setCreditsSortedByPopularity(sortedCredits.slice(0, 8));\r\n  };\r\n  console.log(creditsSortedByPopularity);\r\n  const renameAndSortByReleaseDate = () => {\r\n    let changedCredits = allCredits.cast.map((credit) => {\r\n      if (credit.hasOwnProperty(\"first_air_date\")) {\r\n        credit.release_date = credit.first_air_date;\r\n        if (credit.hasOwnProperty(\"name\")) {\r\n          credit.title = credit.name;\r\n          delete credit.name;\r\n        }\r\n        delete credit.first_air_date;\r\n        return credit;\r\n      } else {\r\n        if (credit.release_date === undefined || credit.release_date === \"\") {\r\n          credit.release_date = \"3000\";\r\n        }\r\n        return credit;\r\n      }\r\n    });\r\n    changedCredits = changedCredits.sort((credit1, credit2) =>\r\n      Number(credit1.release_date.slice(0, 4)) >\r\n      Number(credit2.release_date.slice(0, 4))\r\n        ? -1\r\n        : 1\r\n    );\r\n\r\n    setChangedCredts(changedCredits);\r\n    setAllCredits(null);\r\n  };\r\n\r\n  console.log(categories);\r\n  if (allCredits) {\r\n    renameAndSortByReleaseDate();\r\n    sortByPopularity();\r\n    setCategories(kategorieTeilung(allCredits));\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchActorDetails();\r\n    fetchAllCredits();\r\n  }, []);\r\n  return (\r\n    isLoaded && (\r\n      <Container>\r\n        <Grid container style={{ display: \"flex\", marginTop: \"20px\" }}>\r\n          <Grid item sm={3}>\r\n            {actorDetails.profile_path ? (\r\n              <img\r\n                style={{ borderRadius: \"5px\" }}\r\n                src={`https://www.themoviedb.org/t/p/w300/${actorDetails.profile_path}`}\r\n              ></img>\r\n            ) : (\r\n              <img\r\n                style={{ borderRadius: \"5px\", width: \"300px\", height: \"450px\" }}\r\n                src={ProfilePicHolder}\r\n              ></img>\r\n            )}\r\n\r\n            <Typography color=\"primary\" variant=\"h6\">\r\n              Known For{\" \"}\r\n            </Typography>\r\n            <Typography>\r\n              {actorDetails.known_for_department\r\n                ? actorDetails.known_for_department\r\n                : \"-\"}\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"h6\">\r\n              Gender{\" \"}\r\n            </Typography>\r\n            <Typography>\r\n              {actorDetails.gender === 1 ? \"Female\" : \"Male\"}\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"h6\">\r\n              Birthday\r\n            </Typography>\r\n            <Typography>\r\n              {actorDetails.birthday\r\n                ? Number(currentYear - actorDetails.birthday.slice(0, 4))\r\n                : \"-\"}\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"h6\">\r\n              Place of Birth{\" \"}\r\n            </Typography>\r\n            <Typography>\r\n              {actorDetails.place_of_birth ? actorDetails.place_of_birth : \"-\"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item sm={9} style={{ paddingLeft: \"20px\" }}>\r\n            <div>\r\n              <Typography variant=\"h3\" style={{ marginBottom: \"30px\" }}>\r\n                {actorDetails.name}\r\n              </Typography>\r\n              <Typography variant=\"h6\" style={{ marginBottom: \"15px\" }}>\r\n                Biography{\" \"}\r\n              </Typography>\r\n              <Typography variant=\"body1\" style={{ marginBottom: \"15px\" }}>\r\n                {actorDetails.biography ? actorDetails.biography : \"-\"}\r\n              </Typography>\r\n            </div>\r\n            <div\r\n              style={{ display: \"flex\", overflowX: \"scroll\", width: \"auto\" }}\r\n            >\r\n              {creditsSortedByPopularity.map((credit) => (\r\n                <div style={{ margin: \"10px\", width: \"150px\" }}>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    to={{\r\n                      pathname: `/details/${credit.id}`,\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ borderRadius: \"5px\" }}\r\n                      src={`https://www.themoviedb.org/t/p/w150_and_h225_bestv2${credit.poster_path}`}\r\n                    />\r\n                    <Typography className=\"hoverLink\">\r\n                      {credit.title}\r\n                    </Typography>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <ActorCredits changedCredits={changedCredits} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ActorPage;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCredits.js",["170","171","172"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Typography, Paper } from \"@material-ui/core\";\r\nimport \"../../linkStyle.scss\";\r\nconst ActorCredits = ({ changedCredits }) => {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Typography variant=\"h6\" style={{ marginTop: \"10px\" }}>\r\n          Acting\r\n        </Typography>\r\n      </div>\r\n      <Paper>\r\n        {changedCredits &&\r\n          changedCredits.map((credit) => (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n\r\n                borderRadius: \"5px\",\r\n                margin: \"10px\",\r\n                width: \"70%\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                color=\"primary\"\r\n                style={{ textAlign: \"center\", width: \"50px\" }}\r\n              >\r\n                {credit.release_date !== \"3000\"\r\n                  ? credit.release_date.slice(0, 4)\r\n                  : \"-\"}\r\n                &nbsp;\r\n              </Typography>\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"black\",\r\n                  display: \"flex\",\r\n                }}\r\n                to={{\r\n                  pathname: `/details/${credit.id}`,\r\n                }}\r\n              >\r\n                <Typography\r\n                  className=\"hoverLink\"\r\n                  style={{ fontWeight: \"600\", alignSelf: \"center\" }}\r\n                >\r\n                  {credit.title}\r\n                </Typography>\r\n              </Link>\r\n              &nbsp;\r\n              <Typography style={{ alignSelf: \"center\" }}>\r\n                {credit.character && \"  as \" + credit.character}\r\n                {credit.episode_count === 1 &&\r\n                  ` (in ${credit.episode_count} episode)`}\r\n                {credit.episode_count > 1 &&\r\n                  ` (in ${credit.episode_count} episodes)`}\r\n              </Typography>\r\n              {/* <p>{credit.media_type === \"tv\" ? \"tv\" : \"movie\"}</p> */}\r\n            </div>\r\n          ))}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActorCredits;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\SideInfo.js",["173","174","175","176","177","178","179"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Footer.js",["180","181"],"import React from \"react\";\r\nimport footerLogo from \"../images/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\";\r\nimport { Container } from \"@material-ui/core\";\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#032038\",\r\n        height: \"300px\",\r\n        marginTop: \"100px\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <img src={footerLogo} style={{ width: \"50%\" }}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\kategorieTeilung.js",["182"],"export function kategorieTeilung(credits) {\r\n  let categories = {\r\n    production: [],\r\n    art: [],\r\n    crewMembers: [],\r\n    costume: [],\r\n    camera: [],\r\n    directing: [],\r\n    editing: [],\r\n    lighting: [],\r\n    sound: [],\r\n    visualEffects: [],\r\n    writing: [],\r\n  };\r\n\r\n  credits.crew.map((crew) => {\r\n    if (crew.department === \"Production\") {\r\n      categories.production.push(crew);\r\n    } else if (crew.department === \"Art\") {\r\n      categories.art.push(crew);\r\n    } else if (crew.department === \"Crew\") {\r\n      categories.crewMembers.push(crew);\r\n    } else if (crew.department === \"Costume & Make-Up\") {\r\n      categories.costume.push(crew);\r\n    } else if (crew.department === \"Camera\") {\r\n      categories.camera.push(crew);\r\n    } else if (crew.department === \"Directing\") {\r\n      categories.directing.push(crew);\r\n    } else if (crew.department === \"Editing\") {\r\n      categories.editing.push(crew);\r\n    } else if (crew.department === \"Lighting\") {\r\n      categories.lighting.push(crew);\r\n    } else if (crew.department === \"Sound\") {\r\n      categories.sound.push(crew);\r\n    } else if (crew.department === \"Visual Effects\") {\r\n      categories.visualEffects.push(crew);\r\n    } else if (crew.department === \"Writing\") {\r\n      categories.writing.push(crew);\r\n    }\r\n  });\r\n  return categories;\r\n}\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SearchContext.js",["183"],"import React from \"react\";\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\nconst SearchContext = React.createContext();\r\nconst SearchContextUpdate = React.createContext();\r\nconst SearchRedirectContext = React.createContext();\r\nconst SearchRedirectContextUpdate = React.createContext();\r\n\r\nexport function useSearch() {\r\n  return useContext(SearchContext);\r\n}\r\n\r\nexport function useSearchUpdate() {\r\n  return useContext(SearchContextUpdate);\r\n}\r\nexport function useSearchRedirect() {\r\n  return useContext(SearchRedirectContext);\r\n}\r\nexport function useSearchRedirectUpdate() {\r\n  return useContext(SearchRedirectContextUpdate);\r\n}\r\n\r\nfunction SearchProvider({ children }) {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [searchRedirect, setSearchRedirect] = useState(false);\r\n  return (\r\n    <SearchContext.Provider value={searchString}>\r\n      <SearchContextUpdate.Provider value={setSearchString}>\r\n        <SearchRedirectContext.Provider value={searchRedirect}>\r\n          <SearchRedirectContextUpdate.Provider value={setSearchRedirect}>\r\n            {children}\r\n          </SearchRedirectContextUpdate.Provider>\r\n        </SearchRedirectContext.Provider>\r\n      </SearchContextUpdate.Provider>\r\n    </SearchContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SearchProvider;\r\n",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":16,"column":10,"nodeType":"190","messageId":"191","endLine":16,"endColumn":14},{"ruleId":"188","severity":1,"message":"192","line":25,"column":10,"nodeType":"190","messageId":"191","endLine":25,"endColumn":24},{"ruleId":"188","severity":1,"message":"193","line":25,"column":26,"nodeType":"190","messageId":"191","endLine":25,"endColumn":43},{"ruleId":"188","severity":1,"message":"194","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"195","line":1,"column":39,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"196","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":17},{"ruleId":"188","severity":1,"message":"197","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":21},{"ruleId":"188","severity":1,"message":"198","line":18,"column":3,"nodeType":"190","messageId":"191","endLine":18,"endColumn":15},{"ruleId":"188","severity":1,"message":"199","line":20,"column":3,"nodeType":"190","messageId":"191","endLine":20,"endColumn":14},{"ruleId":"188","severity":1,"message":"200","line":22,"column":11,"nodeType":"190","messageId":"191","endLine":22,"endColumn":23},{"ruleId":"188","severity":1,"message":"201","line":48,"column":10,"nodeType":"190","messageId":"191","endLine":48,"endColumn":14},{"ruleId":"188","severity":1,"message":"202","line":48,"column":16,"nodeType":"190","messageId":"191","endLine":48,"endColumn":23},{"ruleId":"188","severity":1,"message":"194","line":1,"column":38,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"203","line":9,"column":3,"nodeType":"190","messageId":"191","endLine":9,"endColumn":13},{"ruleId":"188","severity":1,"message":"204","line":10,"column":3,"nodeType":"190","messageId":"191","endLine":10,"endColumn":13},{"ruleId":"188","severity":1,"message":"205","line":11,"column":3,"nodeType":"190","messageId":"191","endLine":11,"endColumn":7},{"ruleId":"188","severity":1,"message":"206","line":17,"column":3,"nodeType":"190","messageId":"191","endLine":17,"endColumn":18},{"ruleId":"188","severity":1,"message":"207","line":18,"column":3,"nodeType":"190","messageId":"191","endLine":18,"endColumn":12},{"ruleId":"188","severity":1,"message":"208","line":20,"column":8,"nodeType":"190","messageId":"191","endLine":20,"endColumn":24},{"ruleId":"188","severity":1,"message":"209","line":21,"column":8,"nodeType":"190","messageId":"191","endLine":21,"endColumn":26},{"ruleId":"188","severity":1,"message":"210","line":32,"column":9,"nodeType":"190","messageId":"191","endLine":32,"endColumn":29},{"ruleId":"188","severity":1,"message":"211","line":34,"column":23,"nodeType":"190","messageId":"191","endLine":34,"endColumn":37},{"ruleId":"188","severity":1,"message":"212","line":38,"column":10,"nodeType":"190","messageId":"191","endLine":38,"endColumn":23},{"ruleId":"188","severity":1,"message":"213","line":38,"column":25,"nodeType":"190","messageId":"191","endLine":38,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":61,"column":6,"nodeType":"216","endLine":61,"endColumn":26,"suggestions":"217"},{"ruleId":"188","severity":1,"message":"205","line":2,"column":22,"nodeType":"190","messageId":"191","endLine":2,"endColumn":26},{"ruleId":"188","severity":1,"message":"218","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":20},{"ruleId":"188","severity":1,"message":"219","line":4,"column":40,"nodeType":"190","messageId":"191","endLine":4,"endColumn":46},{"ruleId":"188","severity":1,"message":"220","line":7,"column":16,"nodeType":"190","messageId":"191","endLine":7,"endColumn":25},{"ruleId":"188","severity":1,"message":"221","line":26,"column":9,"nodeType":"190","messageId":"191","endLine":26,"endColumn":14},{"ruleId":"188","severity":1,"message":"222","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":21,"column":11,"nodeType":"225","endLine":24,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":26,"column":11,"nodeType":"225","endLine":29,"endColumn":12},{"ruleId":"188","severity":1,"message":"226","line":6,"column":3,"nodeType":"190","messageId":"191","endLine":6,"endColumn":13},{"ruleId":"188","severity":1,"message":"227","line":9,"column":3,"nodeType":"190","messageId":"191","endLine":9,"endColumn":17},{"ruleId":"188","severity":1,"message":"228","line":12,"column":3,"nodeType":"190","messageId":"191","endLine":12,"endColumn":12},{"ruleId":"188","severity":1,"message":"220","line":15,"column":16,"nodeType":"190","messageId":"191","endLine":15,"endColumn":25},{"ruleId":"188","severity":1,"message":"228","line":4,"column":3,"nodeType":"190","messageId":"191","endLine":4,"endColumn":12},{"ruleId":"188","severity":1,"message":"229","line":5,"column":3,"nodeType":"190","messageId":"191","endLine":5,"endColumn":7},{"ruleId":"188","severity":1,"message":"204","line":6,"column":3,"nodeType":"190","messageId":"191","endLine":6,"endColumn":13},{"ruleId":"188","severity":1,"message":"230","line":7,"column":3,"nodeType":"190","messageId":"191","endLine":7,"endColumn":12},{"ruleId":"188","severity":1,"message":"231","line":8,"column":3,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"205","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":14},{"ruleId":"188","severity":1,"message":"232","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":20},{"ruleId":"188","severity":1,"message":"233","line":14,"column":22,"nodeType":"190","messageId":"191","endLine":14,"endColumn":35},{"ruleId":"214","severity":1,"message":"234","line":43,"column":6,"nodeType":"216","endLine":43,"endColumn":8,"suggestions":"235"},{"ruleId":"223","severity":1,"message":"224","line":31,"column":9,"nodeType":"225","endLine":38,"endColumn":11},{"ruleId":"188","severity":1,"message":"220","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":19},{"ruleId":"188","severity":1,"message":"236","line":3,"column":21,"nodeType":"190","messageId":"191","endLine":3,"endColumn":34},{"ruleId":"223","severity":1,"message":"224","line":57,"column":15,"nodeType":"225","endLine":60,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":68,"column":15,"nodeType":"225","endLine":72,"endColumn":16},{"ruleId":"188","severity":1,"message":"222","line":3,"column":22,"nodeType":"190","messageId":"191","endLine":3,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":65,"column":11,"nodeType":"225","endLine":70,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":72,"column":11,"nodeType":"225","endLine":79,"endColumn":12},{"ruleId":"188","severity":1,"message":"222","line":4,"column":33,"nodeType":"190","messageId":"191","endLine":4,"endColumn":38},{"ruleId":"188","severity":1,"message":"220","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":19},{"ruleId":"188","severity":1,"message":"237","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":19},{"ruleId":"238","severity":1,"message":"239","line":61,"column":22,"nodeType":"240","messageId":"241","endLine":61,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":63,"column":26,"nodeType":"240","messageId":"244","endLine":63,"endColumn":61},{"ruleId":"214","severity":1,"message":"245","line":85,"column":6,"nodeType":"216","endLine":85,"endColumn":8,"suggestions":"246"},{"ruleId":"188","severity":1,"message":"247","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"214","severity":1,"message":"248","line":92,"column":6,"nodeType":"216","endLine":92,"endColumn":8,"suggestions":"249"},{"ruleId":"223","severity":1,"message":"224","line":99,"column":15,"nodeType":"225","endLine":102,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":104,"column":15,"nodeType":"225","endLine":107,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":162,"column":21,"nodeType":"225","endLine":165,"endColumn":23},{"ruleId":"188","severity":1,"message":"228","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":19},{"ruleId":"188","severity":1,"message":"250","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":16},{"ruleId":"188","severity":1,"message":"251","line":6,"column":18,"nodeType":"190","messageId":"191","endLine":6,"endColumn":27},{"ruleId":"188","severity":1,"message":"196","line":5,"column":3,"nodeType":"190","messageId":"191","endLine":5,"endColumn":10},{"ruleId":"188","severity":1,"message":"197","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"252","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":24},{"ruleId":"188","severity":1,"message":"253","line":15,"column":26,"nodeType":"190","messageId":"191","endLine":15,"endColumn":44},{"ruleId":"214","severity":1,"message":"254","line":35,"column":6,"nodeType":"216","endLine":35,"endColumn":8,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"239","line":49,"column":30,"nodeType":"240","messageId":"241","endLine":49,"endColumn":32},{"ruleId":"238","severity":1,"message":"239","line":55,"column":41,"nodeType":"240","messageId":"241","endLine":55,"endColumn":43},{"ruleId":"188","severity":1,"message":"228","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":15,"column":7,"nodeType":"225","endLine":15,"endColumn":54},{"ruleId":"256","severity":1,"message":"257","line":16,"column":27,"nodeType":"258","messageId":"259","endLine":16,"endColumn":29},{"ruleId":"188","severity":1,"message":"260","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":23},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'showMoviesMode' is assigned a value but never used.","'setShowMoviesMode' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Context' is defined but never used.","'SearchContext' is defined but never used.","'NativeSelect' is defined but never used.","'FormControl' is defined but never used.","'MaterialLink' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'useSearchUpdate' is defined but never used.","'useSearch' is defined but never used.","'NavigateNextIcon' is defined but never used.","'NavigateBeforeIcon' is defined but never used.","'redirectSearchUpdate' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'noMoviesFound' is assigned a value but never used.","'setNoMoviesFound' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["263"],"'makeStyles' is defined but never used.","'Button' is defined but never used.","'useParams' is defined but never used.","'items' is assigned a value but never used.","'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardHeader' is defined but never used.","'CardActionArea' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'isRendered' is assigned a value but never used.","'setIsRendered' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'radius' and 'rating'. Either include them or remove the dependency array.",["264"],"'useRouteMatch' is defined but never used.","'RatingWheel' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has a missing dependency: 'fetchMovie'. Either include it or remove the dependency array.",["265"],"'Credits' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchActorDetails' and 'fetchAllCredits'. Either include them or remove the dependency array.",["266"],"'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'recommedations' is assigned a value but never used.","'setRecommendations' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["267"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [fetchMovies, redirectToDiscover]",{"range":"278","text":"279"},"Update the dependencies array to be: [radius, rating]",{"range":"280","text":"281"},"Update the dependencies array to be: [fetchMovie]",{"range":"282","text":"283"},"Update the dependencies array to be: [fetchActorDetails, fetchAllCredits]",{"range":"284","text":"285"},"Update the dependencies array to be: [fetchData]",{"range":"286","text":"287"},[1737,1757],"[fetchMovies, redirectToDiscover]",[1066,1068],"[radius, rating]",[2626,2628],"[fetchMovie]",[2919,2921],"[fetchActorDetails, fetchAllCredits]",[1070,1072],"[fetchData]"]