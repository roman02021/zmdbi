[{"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\index.js":"1","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\reportWebVitals.js":"2","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\App.js":"3","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\Review.js":"4","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopBilledCast.js":"5","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopMovie.js":"6","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\MoviePage.js":"7","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorPage.js":"8","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCredits.js":"9","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\SideInfo.js":"10","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCreditCategory.js":"11","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\LandingPage.js":"12","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\MovieSlider.js":"13","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\RatingWheel.js":"14","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\TrendingPeople.js":"15","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SessionContext.js":"16","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits\\CreditsPerson.js":"17","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\kategorieTeilung.js":"18","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\Footer.js":"19","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\NavBar.js":"20","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Discover\\DiscoverPage.js":"21","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Discover\\Searcher.js":"22","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\MovieCard.js":"23","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits\\Credits.js":"24","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SignedContext.js":"25","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\LoginApproved.js":"26","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\DiscoverContext.js":"27","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResults.js":"28","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResult.js":"29","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResultsSide.js":"30","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\PageNumNav.js":"31"},{"size":288,"mtime":1610025570334,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2462,"mtime":1611419035999,"results":"35","hashOfConfig":"33"},{"size":3058,"mtime":1610760612288,"results":"36","hashOfConfig":"33"},{"size":3289,"mtime":1610744767214,"results":"37","hashOfConfig":"33"},{"size":4562,"mtime":1611079118257,"results":"38","hashOfConfig":"33"},{"size":5915,"mtime":1611324571129,"results":"39","hashOfConfig":"33"},{"size":8495,"mtime":1611437117830,"results":"40","hashOfConfig":"33"},{"size":1891,"mtime":1611074505830,"results":"41","hashOfConfig":"33"},{"size":3539,"mtime":1611433893776,"results":"42","hashOfConfig":"33"},{"size":3117,"mtime":1611439126056,"results":"43","hashOfConfig":"33"},{"size":4652,"mtime":1611324537904,"results":"44","hashOfConfig":"33"},{"size":760,"mtime":1611079296499,"results":"45","hashOfConfig":"33"},{"size":2473,"mtime":1611246735356,"results":"46","hashOfConfig":"33"},{"size":3016,"mtime":1611420691536,"results":"47","hashOfConfig":"33"},{"size":700,"mtime":1611010738318,"results":"48","hashOfConfig":"33"},{"size":1598,"mtime":1611079388784,"results":"49","hashOfConfig":"33"},{"size":1320,"mtime":1611074376704,"results":"50","hashOfConfig":"33"},{"size":538,"mtime":1611079321049,"results":"51","hashOfConfig":"33"},{"size":11009,"mtime":1611449941193,"results":"52","hashOfConfig":"33"},{"size":7025,"mtime":1611449977538,"results":"53","hashOfConfig":"33"},{"size":6936,"mtime":1611449238552,"results":"54","hashOfConfig":"33"},{"size":7276,"mtime":1611414804494,"results":"55","hashOfConfig":"33"},{"size":3471,"mtime":1611079442529,"results":"56","hashOfConfig":"33"},{"size":1677,"mtime":1611229800181,"results":"57","hashOfConfig":"33"},{"size":1381,"mtime":1611329303856,"results":"58","hashOfConfig":"33"},{"size":746,"mtime":1611267093042,"results":"59","hashOfConfig":"33"},{"size":10525,"mtime":1611434711147,"results":"60","hashOfConfig":"33"},{"size":165,"mtime":1611357672410,"results":"61","hashOfConfig":"33"},{"size":2317,"mtime":1611434446170,"results":"62","hashOfConfig":"33"},{"size":3376,"mtime":1611438044326,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1o4rh33",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"66"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\index.js",[],["149","150"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\reportWebVitals.js",[],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\App.js",["151","152"],"import \"./App.css\";\nimport DiscoverPage from \"./components/Discover/DiscoverPage\";\nimport NavBar from \"./components/shared/NavBar\";\nimport MoviePage from \"./components/MovieDetails/MoviePage\";\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Credits from \"./components/Credits/Credits\";\nimport ActorPage from \"./components/ActorPage/ActorPage\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport { CssBaseline, createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Footer from \"./components/shared/Footer\";\nimport \"./linkStyle.scss\";\n\nimport SessionProvider from \"./contexts/SessionContext\";\nimport DiscoverProvider from \"./contexts/DiscoverContext\";\nimport { blue, red } from \"@material-ui/core/colors\";\nimport SignedProvider from \"./contexts/SignedContext\";\nimport LoginApproved from \"./LoginApproved\";\nimport SearchResults from \"./components/SearchPage/SearchResults\";\nconst theme = createMuiTheme({\n  pallete: {\n    primary: red,\n  },\n});\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <DiscoverProvider>\n            <SignedProvider>\n              <SessionProvider>\n                <NavBar />\n\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <LandingPage />\n                  </Route>\n                  <Route path=\"/discover\" component={DiscoverPage}>\n                    <DiscoverPage />\n                  </Route>\n                  <Route path=\"/details/:media_type/:id\" component={MoviePage}>\n                    <MoviePage />\n                  </Route>\n                  <Route path=\"/credits/:movieId\" component={Credits}>\n                    <Credits />\n                  </Route>\n                  <Route path=\"/actor/:actorId\" component={ActorPage}>\n                    <ActorPage />\n                  </Route>\n                  <Route path=\"/logginApproved\" component={LoginApproved}>\n                    <LoginApproved />\n                  </Route>\n                  <Route path=\"/search/:query\" component={SearchResults}>\n                    <SearchResults />\n                  </Route>\n                </Switch>\n              </SessionProvider>\n            </SignedProvider>\n          </DiscoverProvider>\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\Review.js",["153"],"import React, { useState } from \"react\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport GradeIcon from \"@material-ui/icons/Grade\";\r\nconst useStyles = makeStyles({\r\n  readBtn: {\r\n    border: \"none\",\r\n    padding: \"0px\",\r\n    paddingLeft: \"2px\",\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Review = ({ reviews }) => {\r\n  const [clamped, setClamped] = useState(true);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper\r\n      style={{\r\n        display: \"flex\",\r\n        marginTop: \"35px\",\r\n        marginLeft: \"10px\",\r\n        overflow: \"hidden\",\r\n\r\n        margin: \"20px auto 0 auto\",\r\n      }}\r\n    >\r\n      <div>\r\n        <img\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            margin: \"10px 15px 0 10px\",\r\n            width: \"60px\",\r\n          }}\r\n          src={`https://secure.gravatar.com/avatar/${reviews.author_details.avatar_path}`}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"h6\">{reviews.author}</Typography>\r\n        {reviews.author_details.rating && (\r\n          <div\r\n            style={{\r\n              margin: \"7px 0 5px0\",\r\n              padding: \"2px 0px 0px 0px\",\r\n              color: \"white\",\r\n              backgroundColor: \"black\",\r\n              width: \"60px\",\r\n              textAlign: \"center\",\r\n              borderRadius: \"5px\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <GradeIcon\r\n              color=\"primary\"\r\n              style={{ marginLeft: \"5px\" }}\r\n            ></GradeIcon>\r\n            <Typography\r\n              variant=\"button\"\r\n              style={{ marginRight: \"4px\", fontWeight: 600, fontSize: 16 }}\r\n            >\r\n              {reviews.author_details.rating}\r\n            </Typography>\r\n          </div>\r\n        )}\r\n\r\n        <Typography variant=\"subtitle2\">\r\n          Created at: {reviews.created_at.slice(0, 10)}\r\n        </Typography>\r\n        {reviews.content.length <= 400 && reviews.content}\r\n        {reviews.content.length > 400 &&\r\n          (clamped ? (\r\n            <Typography variant=\"body2\">\r\n              {reviews.content.slice(0, 400)}...\r\n              <button\r\n                onClick={() => setClamped(false)}\r\n                className={classes.readBtn}\r\n              >\r\n                <Typography variant=\"body2\" color=\"secondary\">\r\n                  Read More\r\n                </Typography>\r\n              </button>\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"body2\">\r\n              {reviews.content}\r\n              <button\r\n                onClick={() => setClamped(true)}\r\n                className={classes.readBtn}\r\n              >\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  Read Less\r\n                </Typography>\r\n              </button>\r\n            </Typography>\r\n          ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Review;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopBilledCast.js",["154","155","156"],"import React from \"react\";\r\nimport { Typography, Paper, Button } from \"@material-ui/core\";\r\nimport { useParams, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NoProfilePic from \"../../images/profile_pic_holder_smaller.png\";\r\nconst useStyles = makeStyles({\r\n  actorImage: {\r\n    borderRadius: \"5px 5px 0 0\",\r\n  },\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(30%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  actorPaper: {\r\n    margin: \"10px\",\r\n  },\r\n  acotrSubtitle: {\r\n    fontSize: \"12px\",\r\n\r\n    fontWeight: \"bold\",\r\n    color: \"#757575\",\r\n  },\r\n  textStyle: {\r\n    margin: \"5px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nconst TopBilledCast = ({ topBilledCast, movieDetails, credits }) => {\r\n  const classes = useStyles();\r\n\r\n  return topBilledCast.length > 0 ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n\r\n        overflowX: \"scroll\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {topBilledCast.map((actor) => (\r\n        <Paper className={classes.actorPaper}>\r\n          {actor.profile_path ? (\r\n            <Link\r\n              to={{\r\n                pathname: `/actor/${actor.id}`,\r\n              }}\r\n            >\r\n              <img\r\n                className={classes.actorImage}\r\n                src={`https://www.themoviedb.org/t/p/w138_and_h175_face/${actor.profile_path}`}\r\n              ></img>\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              to={{\r\n                pathname: `/actor/${actor.id}`,\r\n              }}\r\n            >\r\n              <img\r\n                alt={actor.name}\r\n                style={{ width: \"138px\", height: \"175px\" }}\r\n                className={classes.actorImage}\r\n                src={NoProfilePic}\r\n              ></img>\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n            }}\r\n            to={{\r\n              pathname: `/actor/${actor.id}`,\r\n            }}\r\n          >\r\n            <Typography\r\n              style={{ margin: \"0 6px 0 6px\" }}\r\n              variant=\"body2\"\r\n              className=\"hoverLink\"\r\n            >\r\n              {actor.original_name}\r\n            </Typography>\r\n          </Link>\r\n          <Typography\r\n            style={{ margin: \"0 6px 0 6px\" }}\r\n            variant=\"caption\"\r\n            classes={{\r\n              caption: classes.acotrSubtitle,\r\n            }}\r\n          >\r\n            {actor.character}\r\n          </Typography>\r\n        </Paper>\r\n      ))}\r\n      <div style={{ display: \"flex\", alignSelf: \"center\" }}>\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: `/credits/${movieDetails.id}`,\r\n            state: {\r\n              credits: credits,\r\n            },\r\n          }}\r\n        >\r\n          <Button style={{ width: \"150px\" }}>\r\n            <NavigateNextIcon />\r\n            Show Cast\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Typography>No Cast</Typography>\r\n  );\r\n};\r\n\r\nexport default TopBilledCast;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\TopMovie.js",["157","158","159"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport image_holder from \"../../images/no_image_holder.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../linkStyle.scss\";\r\nconst useStyles = makeStyles({\r\n  actorImage: {\r\n    borderRadius: \"5px 5px 0 0\",\r\n  },\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(30%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  maxWidthXl: {\r\n    padding: 0,\r\n    maxWidth: \"1170px\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#EEEEEE\",\r\n  },\r\n  actorPaper: {\r\n    margin: \"10px\",\r\n  },\r\n  acotrSubtitle: {\r\n    fontSize: \"12px\",\r\n\r\n    fontWeight: \"bold\",\r\n    color: \"#757575\",\r\n  },\r\n  textStyle: {\r\n    margin: \"5px\",\r\n    marginLeft: \"15px\",\r\n  },\r\n});\r\n\r\nconst TopMovie = ({ movieDetails, director, writer }) => {\r\n  console.log(\"WRITOR\", writer);\r\n  const classes = useStyles();\r\n  console.log(movieDetails);\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"632px\",\r\n        display: \"flex\",\r\n\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n\r\n          zIndex: 1,\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {movieDetails.poster_path ? (\r\n          <img\r\n            style={{\r\n              borderRadius: \"5px\",\r\n            }}\r\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\r\n          ></img>\r\n        ) : (\r\n          <img\r\n            style={{\r\n              borderRadius: \"5px\",\r\n              width: \"300px\",\r\n              alt: \"me\",\r\n            }}\r\n            src={image_holder}\r\n          ></img>\r\n        )}\r\n\r\n        <div\r\n          style={{\r\n            color: \"white\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n\r\n            width: \"70%\",\r\n            paddingLeft: \"10px\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" className={classes.textStyle}>\r\n            {movieDetails.title && movieDetails.title}\r\n            {movieDetails.name && movieDetails.name}\r\n            {movieDetails.release_date &&\r\n              \" (\" + movieDetails.release_date.slice(0, 4) + \")\"}\r\n          </Typography>\r\n\r\n          <Typography\r\n            component=\"div\"\r\n            className={classes.textStyle}\r\n            style={{\r\n              display: \"flex\",\r\n              padding: 0,\r\n              alignContent: \"flex-start\",\r\n            }}\r\n          >\r\n            {movieDetails.genres &&\r\n              movieDetails.genres.map((genre) => (\r\n                <p style={{ margin: 0, marginRight: \"5px\" }}>{genre.name}</p>\r\n              ))}\r\n          </Typography>\r\n\r\n          <Typography className={classes.textStyle}>\r\n            Rating:{\" \"}\r\n            {movieDetails.vote_average\r\n              ? movieDetails.vote_average * 10 + \"%\"\r\n              : \"Not Yet Rated\"}\r\n          </Typography>\r\n\r\n          <Typography className={classes.textStyle}>\r\n            {movieDetails.runtime > 0 &&\r\n              Math.floor(movieDetails.runtime / 60) + \"h\"}{\" \"}\r\n            {movieDetails.runtime > 0 && (movieDetails.runtime % 60) + \"m\"}\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.textStyle}>\r\n            Overview\r\n          </Typography>\r\n          <Typography className={classes.textStyle}>\r\n            {\" \"}\r\n            {movieDetails.overview}\r\n          </Typography>\r\n          <div>\r\n            {director && (\r\n              <div className={classes.textStyle}>\r\n                <Typography variant=\"h6\">Director</Typography>\r\n                <Link\r\n                  to={`/actor/${director.id}/`}\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Typography className=\"linkStyle\">{director.name}</Typography>\r\n                </Link>\r\n              </div>\r\n            )}\r\n            {writer && (\r\n              <div className={classes.textStyle}>\r\n                <Typography variant=\"h6\">Writer</Typography>\r\n                <Link\r\n                  to={`/actor/${writer.id}/`}\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Typography className=\"linkStyle\">{writer.name}</Typography>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopMovie;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\MoviePage.js",["160","161","162","163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Review from \"./Review\";\r\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\";\r\nimport { useRouteMatch, Link, useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport \"../../linkStyle.scss\";\r\nimport TopBilledCast from \"./TopBilledCast\";\r\nimport TopMovie from \"./TopMovie\";\r\nimport SideInfo from \"./SideInfo\";\r\nconst useStyles = makeStyles({\r\n  backrop: {\r\n    zIndex: 0,\r\n    position: \"absolute\",\r\n    height: \"632px\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n\r\n    filter: \"brightness(25%)\",\r\n\r\n    width: \"100%\",\r\n  },\r\n  maxWidthXl: {\r\n    padding: 0,\r\n    maxWidth: \"1170px\",\r\n  },\r\n  container: {\r\n    backgroundColor: \"#FAFAFA\",\r\n  },\r\n});\r\n// DOPORUCENE FILMY + KEYWORDS NA PRAVEJ STRANE + DODATOCNE INFO K FILMU\r\nconst MoviePage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { media_type, id } = useParams();\r\n\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n  const [reviews, setReviews] = useState([]);\r\n  const [credits, setCredits] = useState([]);\r\n  const [topBilledCast, setTopBilledCast] = useState([]);\r\n  const [director, setDirector] = useState(\"\");\r\n  const [writer, setWriter] = useState(null);\r\n  const [lodaded, setLoaded] = useState(false);\r\n\r\n  async function fetchMovie() {\r\n    try {\r\n      const details = await axios.get(\r\n        `http://localhost:5000/details/${media_type}`,\r\n        {\r\n          params: { id: id },\r\n        }\r\n      );\r\n      const reviews = await axios.get(\r\n        `http://localhost:5000/details/reviews/${media_type}`,\r\n        {\r\n          params: { id: id },\r\n        }\r\n      );\r\n      const credits = await axios.get(\r\n        `http://localhost:5000/details/credits/${media_type}`,\r\n        {\r\n          params: { id: id },\r\n        }\r\n      );\r\n\r\n      const topBilledCast = credits.data.cast\r\n        .sort((actor) => actor.popularity > actor.popularity)\r\n        .slice(0, 10);\r\n      setTopBilledCast(topBilledCast);\r\n      const director = credits.data.crew.filter(\r\n        (crew) => crew.job === \"Director\"\r\n      );\r\n\r\n      if (director.length > 0) {\r\n        setDirector(director[0]);\r\n      }\r\n\r\n      setCredits(credits.data);\r\n      setMovieDetails(details.data);\r\n      setReviews(reviews.data.results);\r\n\r\n      setLoaded(true);\r\n    } catch (e) {\r\n      try {\r\n        const details = await axios.get(\"http://localhost:5000/details/tv\", {\r\n          params: { id: id },\r\n        });\r\n        const reviews = await axios.get(\r\n          \"http://localhost:5000/details/reviews/tv\",\r\n          {\r\n            params: { id: id },\r\n          }\r\n        );\r\n        const credits = await axios.get(\r\n          \"http://localhost:5000/details/credits/tv\",\r\n          {\r\n            params: { id: id },\r\n          }\r\n        );\r\n\r\n        const topBilledCast = credits.data.cast\r\n          .sort((actor) => actor.popularity > actor.popularity)\r\n          .slice(0, 10);\r\n        setTopBilledCast(topBilledCast);\r\n        const director = credits.data.crew.filter(\r\n          (crew) => crew.job === \"Director\"\r\n        );\r\n        console.log(\"DRAWRWAR\", director);\r\n        if (director.length > 0) {\r\n          setDirector(director[0]);\r\n        }\r\n\r\n        //filter to find director\r\n\r\n        setCredits(credits.data);\r\n        setMovieDetails(details.data);\r\n        setReviews(reviews.data.results);\r\n\r\n        setLoaded(true);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    //filter to find top 10 cast by popularity\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMovie();\r\n  }, []);\r\n  return lodaded ? (\r\n    <div>\r\n      {movieDetails.backdrop_path ? (\r\n        <div\r\n          className={classes.backrop}\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${movieDetails.backdrop_path})`,\r\n          }}\r\n        ></div>\r\n      ) : (\r\n        <div\r\n          className={classes.backrop}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            width: \"1920px\",\r\n          }}\r\n        ></div>\r\n      )}\r\n      <Container className={classes.container} maxWidth=\"lg\">\r\n        <TopMovie\r\n          movieDetails={movieDetails}\r\n          director={director}\r\n          writer={writer}\r\n        />\r\n\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{\r\n            marginTop: \"20px\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          Top Billed Cast\r\n        </Typography>\r\n\r\n        <Grid container lg={12}>\r\n          <Grid item xs={9}>\r\n            <TopBilledCast\r\n              movieDetails={movieDetails}\r\n              topBilledCast={topBilledCast}\r\n              credits={credits}\r\n            ></TopBilledCast>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to={{\r\n                  pathname: `/credits/${movieDetails.id}`,\r\n                  state: {\r\n                    credits: credits,\r\n                  },\r\n                }}\r\n              >\r\n                <Button variant=\"contained\">show cast</Button>\r\n              </Link>\r\n            </div>\r\n            <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\r\n              Reviews {reviews && reviews.length}\r\n            </Typography>\r\n            {reviews &&\r\n              reviews.map((review) => (\r\n                <Review reviews={review} movieDetails={movieDetails} />\r\n              ))}\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <SideInfo\r\n              movieId={movieDetails.id}\r\n              movieDetails={movieDetails}\r\n              mediaType={media_type}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  ) : (\r\n    <div className=\"spinner\"></div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorPage.js",["165","166","167","168"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCredits.js",["169"],"import React, { useState } from \"react\";\r\nimport \"../../linkStyle.scss\";\r\nimport { kategorieTeilung } from \"../shared/kategorieTeilung\";\r\nimport ActorCreditCategory from \"./ActorCreditCategory\";\r\n\r\nconst ActorCredits = ({ changedCredits, crewCredits }) => {\r\n  const categories = kategorieTeilung(crewCredits);\r\n\r\n  console.log(\"aaaa\", categories.costume);\r\n  return (\r\n    <div>\r\n      <div>\r\n        {changedCredits && <ActorCreditCategory credits={changedCredits} />}\r\n        {categories.art.length > 0 && (\r\n          <ActorCreditCategory credits={categories.art} />\r\n        )}\r\n        {categories.camera.length > 0 && (\r\n          <ActorCreditCategory credits={categories.camera} />\r\n        )}\r\n        {categories.costume.length > 0 && (\r\n          <ActorCreditCategory credits={categories.costume} />\r\n        )}\r\n        {categories.directing.length > 0 && (\r\n          <ActorCreditCategory credits={categories.directing} />\r\n        )}\r\n        {categories.crewMembers.length > 0 && (\r\n          <ActorCreditCategory credits={categories.crewMembers} />\r\n        )}\r\n\r\n        {categories.editing.length > 0 && (\r\n          <ActorCreditCategory credits={categories.editing} />\r\n        )}\r\n        {categories.lighting.length > 0 && (\r\n          <ActorCreditCategory credits={categories.lighting} />\r\n        )}\r\n        {categories.sound.length > 0 && (\r\n          <ActorCreditCategory credits={categories.sound} />\r\n        )}\r\n        {categories.production.length > 0 && (\r\n          <ActorCreditCategory credits={categories.production} />\r\n        )}\r\n        {categories.writing.length > 0 && (\r\n          <ActorCreditCategory credits={categories.writing} />\r\n        )}\r\n        {categories.visualEffects.length > 0 && (\r\n          <ActorCreditCategory credits={categories.visualEffects} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActorCredits;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\MovieDetails\\SideInfo.js",["170"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SideInfo = ({ movieId, movieDetails, mediaType }) => {\r\n  const [keywords, setKeywords] = useState(null);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  console.log(\"hehe\", keywords);\r\n  const fetchData = async () => {\r\n    try {\r\n      const keywords = await axios.get(\r\n        `http://localhost:5000/details/${mediaType}/keywords`,\r\n        {\r\n          params: { id: movieId },\r\n        }\r\n      );\r\n      if (keywords.data.results) {\r\n        setKeywords(keywords.data.results);\r\n      } else {\r\n        setKeywords(keywords.data.keywords);\r\n      }\r\n\r\n      setLoaded(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    loaded && (\r\n      <div style={{ marginLeft: \"30px\" }}>\r\n        <Typography variant=\"h6\">Status</Typography>\r\n        {movieDetails.status !== \"\" ? (\r\n          <Typography>{movieDetails.status}</Typography>\r\n        ) : (\r\n          \"-\"\r\n        )}\r\n        <Typography variant=\"h6\">Original Language</Typography>\r\n        {movieDetails.original_language !== \"\" ? (\r\n          <Typography>{movieDetails.original_language}</Typography>\r\n        ) : (\r\n          \"-\"\r\n        )}\r\n        <Typography variant=\"h6\">Budget</Typography>\r\n        {movieDetails.budget ? (\r\n          movieDetails.budget > 1000 ? (\r\n            movieDetails.budget > 1000000 ? (\r\n              <Typography>{movieDetails.budget / 1000000} million</Typography>\r\n            ) : (\r\n              <Typography>{movieDetails.budget / 1000} thousand</Typography>\r\n            )\r\n          ) : (\r\n            <Typography>{movieDetails.budget}</Typography>\r\n          )\r\n        ) : (\r\n          \"-\"\r\n        )}\r\n        <Typography variant=\"h6\">Revenue</Typography>\r\n        {movieDetails.revenue ? (\r\n          movieDetails.revenue > 1000 ? (\r\n            movieDetails.revenue > 1000000 ? (\r\n              <Typography>\r\n                {Number(movieDetails.revenue / 1000000).toFixed(2)} million\r\n              </Typography>\r\n            ) : (\r\n              <Typography>\r\n                {Number(movieDetails.revenue / 1000).toFixed(2)} thousand\r\n              </Typography>\r\n            )\r\n          ) : (\r\n            <Typography>{Number(movieDetails.revenue).toFixed(2)}</Typography>\r\n          )\r\n        ) : (\r\n          \"-\"\r\n        )}\r\n\r\n        <Typography variant=\"h6\" style={{ margin: \"10px 0 10px 0\" }}>\r\n          Keywords\r\n        </Typography>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {keywords ? (\r\n            keywords.map((keyword) => (\r\n              <Link\r\n                to={{\r\n                  pathname: `/search/${keyword.name}`,\r\n                  state: keyword.name,\r\n                }}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button\r\n                  onClick={(e) => {\r\n                    localStorage.setItem(\"searchString\", keyword.name);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  style={{ margin: \"5px\", padding: \"4px\" }}\r\n                >\r\n                  {keyword.name}\r\n                </Button>\r\n              </Link>\r\n            ))\r\n          ) : (\r\n            <Typography>No keywords have been added.</Typography>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default SideInfo;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\ActorPage\\ActorCreditCategory.js",["171","172","173"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\LandingPage.js",["174","175","176"],"import React, { useEffect, useState } from \"react\";\r\nimport MovieSlider from \"./MovieSlider\";\r\nimport axios from \"axios\";\r\nimport { Container, Typography, Paper, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../linkStyle.scss\";\r\nimport TrendingPeople from \"./TrendingPeople\";\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    marginTop: \"25px\",\r\n  },\r\n});\r\n\r\nconst LandingPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [moviesToday, setMoviesToday] = useState([]);\r\n  const [thisDayTv, setThisDayTv] = useState([]);\r\n  const [upcoming, setUpcoming] = useState([]);\r\n  const [isRendered, setIsRendered] = useState(false);\r\n\r\n  const items = [\r\n    {\r\n      name: \"something\",\r\n      description: \"something else\",\r\n    },\r\n    {\r\n      name: \"something\",\r\n      description: \"something else\",\r\n    },\r\n  ];\r\n  const getLandingPage = async () => {\r\n    const topRated = await axios.get(\r\n      \"http://localhost:5000/landingPage/top_rated\"\r\n    );\r\n    setTopRated(topRated.data.results);\r\n\r\n    const moviesToday = await axios.get(\r\n      \"http://localhost:5000/landingPage/this_day/movies\"\r\n    );\r\n    setMoviesToday(moviesToday.data.results);\r\n\r\n    const thisDayTv = await axios.get(\r\n      \"http://localhost:5000/landingPage/this_day/tv\"\r\n    );\r\n    setThisDayTv(thisDayTv.data.results);\r\n\r\n    const upcoming = await axios.get(\r\n      \"http://localhost:5000/landingPage/upcoming\"\r\n    );\r\n    setUpcoming(\r\n      upcoming.data.results\r\n        .sort((upcoming1, upcoming2) =>\r\n          upcoming1.popularity < upcoming2.popularity ? 1 : -1\r\n        )\r\n        .slice(0, 8)\r\n    );\r\n    setIsRendered(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLandingPage();\r\n  }, []);\r\n\r\n  return isRendered ? (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <Container style={{ marginTop: \"20px\" }}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            style={{\r\n              margin: \"auto\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Carousel animation=\"slide\" interval=\"4000\">\r\n              {upcoming.map((movie, i) => (\r\n                <Link\r\n                  props={movie.id}\r\n                  to={`/details/movie/${movie.id}`}\r\n                  style={{ textDecoration: \"none\", color: \"White\" }}\r\n                >\r\n                  <Paper\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      display: \"flex\",\r\n                      // backgroundImage: `url(https://image.tmdb.org/t/p/w780/${movie.backdrop_path})`,\r\n\r\n                      backgroundRepeat: \"no-repeat\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ positin: \"relative \" }}\r\n                      src={`https://image.tmdb.org/t/p/w780/${movie.backdrop_path}`}\r\n                    ></img>\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        width: \"100%\",\r\n                        alignSelf: \"flex-end\",\r\n                        backgroundColor: \"rgba(0, 0, 0, 0.4)\",\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        className=\"hoverLink\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          margin: \"15px\",\r\n                          fontWeight: 500,\r\n                          \"&:hover\": { color: \"black\" },\r\n                        }}\r\n                      >\r\n                        {movie.title}\r\n                      </Typography>\r\n                    </div>\r\n                  </Paper>\r\n                </Link>\r\n              ))}\r\n            </Carousel>\r\n          </div>\r\n          <TrendingPeople />\r\n        </div>\r\n        <Typography variant=\"h3\" className={classes.header}>\r\n          Trending Movies\r\n        </Typography>\r\n        <MovieSlider props={moviesToday} mediaType=\"movie\" />\r\n        <Typography variant=\"h3\" className={classes.header}>\r\n          Trending TV\r\n        </Typography>\r\n        <MovieSlider props={thisDayTv} mediaType=\"tv\" />\r\n        <Typography variant=\"h3\" className={classes.header}>\r\n          Top Rated\r\n        </Typography>\r\n        <MovieSlider props={topRated} mediaType=\"movie\" />\r\n      </Container>\r\n    </div>\r\n  ) : (\r\n    <div className=\"spinner\"></div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\MovieSlider.js",["177"],"import React, { useState } from \"react\";\r\nimport MovieCard from \"../shared/MovieCard\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst MovieSlider = ({ props, mediaType }) => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      m={5}\r\n      height=\"auto\"\r\n      style={{\r\n        backgroundColor: \"#FAFAFA\",\r\n        margin: \"0\",\r\n        marginTop: \"15px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        overflowX: \"scroll\",\r\n        overflowY: \"hidden\",\r\n        paddingBottom: \"none\",\r\n      }}\r\n    >\r\n      {props.map((movie) => (\r\n        <MovieCard\r\n          movie={movie}\r\n          imgHeight=\"231\"\r\n          imgWidth=\"154\"\r\n          mediaType={mediaType}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MovieSlider;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\RatingWheel.js",["178"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nexport const RatingWheel = ({ rating, discover }) => {\r\n  const canvasRef = useRef(null);\r\n  const radius = (2 / 100) * rating;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    console.log(rating);\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 6;\r\n\r\n    //Rating wheel border dependent on rating\r\n    if (radius) {\r\n      if (rating < 55) {\r\n        ctx.strokeStyle = \"orange\";\r\n      } else if (rating <= 30) {\r\n        ctx.strokeStyle = \"gray\";\r\n      } else {\r\n        ctx.strokeStyle = \"green\";\r\n      }\r\n\r\n      ctx.arc(22, 22, 18, 0, radius * Math.PI);\r\n      ctx.stroke();\r\n    } else {\r\n      ctx.strokeStyle = \"red\";\r\n      ctx.arc(22, 22, 18, 0, 2 * Math.PI);\r\n      ctx.stroke();\r\n    }\r\n    //Black middle of the rating wheel\r\n    ctx.beginPath();\r\n    ctx.arc(22, 22, 17, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"white\";\r\n    if (rating === 100) {\r\n      ctx.font = \"700 13px Roboto\";\r\n      ctx.fillText(`${rating}%`, 6, 26, 36);\r\n    } else if (rating) {\r\n      ctx.font = \"700 14px Roboto\";\r\n      ctx.fillText(`${rating}%`, 9, 27, 36);\r\n    } else {\r\n      ctx.font = \"700 14px Roboto\";\r\n      ctx.fillText(`NR`, 12, 27, 36);\r\n    }\r\n  }, []);\r\n\r\n  // var myFont = new FontFace(\r\n  //   \"My Font\",\r\n  //   \"url(https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap)\"\r\n  // );\r\n  // let fontLoaded = false;\r\n  // myFont.load().then(function (font) {\r\n  //   // with canvas, if this is ommited won't work\r\n  //   document.fonts.add(font);\r\n  //   fontLoaded = true;\r\n  //   console.log(\"Font loaded\");\r\n  // });\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"Roboto\" }}>\r\n      {discover ? (\r\n        <canvas\r\n          width=\"44px\"\r\n          height=\"44px\"\r\n          ref={canvasRef}\r\n          {...rating}\r\n          style={{\r\n            borderColor: \"blue\",\r\n            position: \"absolute\",\r\n            top: \"3px\",\r\n            right: \"152px\",\r\n          }}\r\n        ></canvas>\r\n      ) : (\r\n        <canvas\r\n          width=\"44px\"\r\n          height=\"44px\"\r\n          ref={canvasRef}\r\n          {...rating}\r\n          style={{\r\n            fontFamily: \"Roboto\",\r\n            borderColor: \"blue\",\r\n            position: \"absolute\",\r\n            top: \"1px\",\r\n            right: \"108px\",\r\n          }}\r\n        ></canvas>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default RatingWheel;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\LandingPage\\TrendingPeople.js",["179","180"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Typography, Paper } from \"@material-ui/core\";\r\nimport CreditPerson from \"../Credits/CreditsPerson\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../linkStyle.scss\";\r\nconst TrendingPerson = (props) => {\r\n  const [trendingPeople, setTrendingPeople] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const fetchTrendingPeople = async () => {\r\n    const trendingPeople = await axios.get(\r\n      \"http://localhost:5000/landingPage/trendingPeople\"\r\n    );\r\n    console.log(\"heh\", trendingPeople.data.results);\r\n    setTrendingPeople(\r\n      trendingPeople.data.results\r\n        .sort((person1, person2) =>\r\n          person1.popularity < person2.popularity ? 1 : -1\r\n        )\r\n        .slice(0, 3)\r\n    );\r\n    setLoaded(true);\r\n  };\r\n\r\n  console.log(\"trending men\", trendingPeople);\r\n  useEffect(() => {\r\n    fetchTrendingPeople();\r\n  }, []);\r\n\r\n  return (\r\n    loaded && (\r\n      <div style={{ width: \"100%\" }}>\r\n        <Typography variant=\"h4\" style={{ marginLeft: \"10px\" }}>\r\n          Trending Actors\r\n        </Typography>\r\n\r\n        {trendingPeople.map((person) => (\r\n          <div>\r\n            <Paper style={{ display: \"flex\", margin: \"10px\" }}>\r\n              <Link\r\n                to={`/actor/${person.id}/`}\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"black\",\r\n                  height: \"112px\",\r\n                }}\r\n              >\r\n                <img\r\n                  style={{\r\n                    width: \"88px\",\r\n                    borderRadius: \"5px 0 0 5px\",\r\n                  }}\r\n                  src={`https://www.themoviedb.org/t/p/w138_and_h175_face/${person.profile_path}`}\r\n                />{\" \"}\r\n              </Link>{\" \"}\r\n              <div style={{ marginLeft: \"10px\" }}>\r\n                <Link\r\n                  to={`/actor/${person.id}/`}\r\n                  style={{ textDecoration: \"none\", color: \"black\" }}\r\n                >\r\n                  <Typography variant=\"h6\" className=\"hoverLink\">\r\n                    {person.name}\r\n                  </Typography>{\" \"}\r\n                </Link>{\" \"}\r\n                <Typography variant=\"caption\" style={{ fontWeight: \"700\" }}>\r\n                  Known For\r\n                </Typography>\r\n                {person.known_for.map((movie) => (\r\n                  <div>\r\n                    <Link\r\n                      props={movie.id}\r\n                      to={`/details/${movie.media_type}/${movie.id}/`}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      <Typography variant=\"body2\" className=\"hoverLink\">\r\n                        {movie.title}\r\n                      </Typography>\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default TrendingPerson;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SessionContext.js",["181"],"import React from \"react\";\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\nconst SessionContext = React.createContext();\r\nconst SessionContextUpdate = React.createContext();\r\n\r\nexport function useSession() {\r\n  return useContext(SessionContext);\r\n}\r\n\r\nexport function useSessionUpdate() {\r\n  return useContext(SessionContextUpdate);\r\n}\r\n\r\nfunction SessionProvider({ children }) {\r\n  const [session, setSession] = useState(\"\");\r\n\r\n  return (\r\n    <SessionContext.Provider value={session}>\r\n      <SessionContextUpdate.Provider value={setSession}>\r\n        {children}\r\n      </SessionContextUpdate.Provider>\r\n    </SessionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SessionProvider;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits\\CreditsPerson.js",["182","183","184"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport \"../../linkStyle.scss\";\r\nimport profilePicHolder from \"../../images/profile_pic_holder2.png\";\r\nconst CreditPerson = ({ credits }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", margin: \"20px 20px 20px 0\" }}>\r\n      <Link\r\n        style={{\r\n          textDecoration: \"none\",\r\n          color: \"black\",\r\n          display: \"flex\",\r\n        }}\r\n        to={{\r\n          pathname: `/actor/${credits.id}`,\r\n        }}\r\n      >\r\n        {credits.profile_path ? (\r\n          <img\r\n            style={{ borderRadius: \"5px\" }}\r\n            src={`https://www.themoviedb.org/t/p/w66_and_h66_face/${credits.profile_path}`}\r\n          ></img>\r\n        ) : (\r\n          <img\r\n            style={{ width: \"66px\", height: \"66px\", borderRadius: \"5px\" }}\r\n            src={profilePicHolder}\r\n          ></img>\r\n        )}\r\n      </Link>\r\n      <Typography style={{ alignSelf: \"center\", marginLeft: \"15px\" }}>\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n          to={{\r\n            pathname: `/actor/${credits.id}`,\r\n          }}\r\n        >\r\n          <Typography className=\"hoverLink\"> {credits.name}</Typography>\r\n        </Link>\r\n        {credits.character ? (\r\n          <Typography variant=\"subtitle2\">\r\n            {credits.character ? credits.character : credits.job}\r\n          </Typography>\r\n        ) : (\r\n          credits.known_for_department\r\n        )}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreditPerson;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\kategorieTeilung.js",["185"],"export function kategorieTeilung(credits) {\r\n  let categories = {\r\n    production: [],\r\n    art: [],\r\n    crewMembers: [],\r\n    costume: [],\r\n    camera: [],\r\n    directing: [],\r\n    editing: [],\r\n    lighting: [],\r\n    sound: [],\r\n    visualEffects: [],\r\n    writing: [],\r\n  };\r\n\r\n  credits.map((crew) => {\r\n    if (crew.department === \"Production\") {\r\n      categories.production.push(crew);\r\n    } else if (crew.department === \"Art\") {\r\n      categories.art.push(crew);\r\n    } else if (crew.department === \"Crew\") {\r\n      categories.crewMembers.push(crew);\r\n    } else if (crew.department === \"Costume & Make-Up\") {\r\n      categories.costume.push(crew);\r\n    } else if (crew.department === \"Camera\") {\r\n      categories.camera.push(crew);\r\n    } else if (crew.department === \"Directing\") {\r\n      categories.directing.push(crew);\r\n    } else if (crew.department === \"Editing\") {\r\n      categories.editing.push(crew);\r\n    } else if (crew.department === \"Lighting\") {\r\n      categories.lighting.push(crew);\r\n    } else if (crew.department === \"Sound\") {\r\n      categories.sound.push(crew);\r\n    } else if (crew.department === \"Visual Effects\") {\r\n      categories.visualEffects.push(crew);\r\n    } else if (crew.department === \"Writing\") {\r\n      categories.writing.push(crew);\r\n    }\r\n  });\r\n  return categories;\r\n}\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\Footer.js",["186","187"],"import React from \"react\";\r\nimport footerLogo from \"../../images/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\";\r\nimport { Container } from \"@material-ui/core\";\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#032038\",\r\n        height: \"300px\",\r\n        marginTop: \"100px\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <img src={footerLogo} style={{ width: \"50%\" }}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\NavBar.js",["188","189","190","191","192","193","194","195","196","197","198","199"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Discover\\DiscoverPage.js",["200","201","202","203","204","205"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Discover\\Searcher.js",["206","207","208","209","210","211","212","213","214","215"],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\shared\\MovieCard.js",["216"],"import React, { useState, useRef } from \"react\";\r\nimport \"./style.scss\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Button,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport noImageHolder from \"../../images/no_image_holder.png\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport RatingWheel from \"../LandingPage/RatingWheel\";\r\nimport { useUserId } from \"../../contexts/SignedContext\";\r\nimport axios from \"axios\";\r\nconst MovieCard = ({ movie, imgWidth, imgHeight, mediaType }) => {\r\n  const userId = useUserId();\r\n\r\n  let borderRadius;\r\n  let height;\r\n  let shadow;\r\n  let bgColor;\r\n  if (imgWidth === \"200\") {\r\n    borderRadius = 0;\r\n    height = 382;\r\n    shadow = \"5px 5px 18px #DAD7D7\";\r\n  } else {\r\n    bgColor = \"#FAFAFA\";\r\n    shadow = \"none\";\r\n    borderRadius = 5;\r\n    height = \"auto\";\r\n  }\r\n  const [score, setScore] = useState(0);\r\n\r\n  const addFavourite = async () => {\r\n    await axios.get(\"http://localhost:5000/getToken/addFavourite\", {\r\n      withCredentials: true,\r\n      params: {\r\n        user_id: userId,\r\n        media_id: movie.id,\r\n        media_type: mediaType,\r\n      },\r\n    });\r\n  };\r\n  const addWatchlist = async () => {\r\n    await axios.get(\"http://localhost:5000/getToken/addWatchlist\", {\r\n      withCredentials: true,\r\n      params: {\r\n        user_id: userId,\r\n        media_id: movie.id,\r\n        media_type: mediaType,\r\n      },\r\n    });\r\n  };\r\n  const addRating = async () => {\r\n    await axios.get(\"http://localhost:5000/getToken/addRating\", {\r\n      withCredentials: true,\r\n      params: {\r\n        score: score,\r\n        media_id: movie.id,\r\n      },\r\n    });\r\n  };\r\n  const rater = useRef(null);\r\n\r\n  const showRater = () => {\r\n    rater.current.style.display = \"block\";\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: `${bgColor}`,\r\n      overflow: \"visible\",\r\n      height: `${height}px`,\r\n      justifySelf: \"center\",\r\n      margin: \"15px\",\r\n      position: \"relative\",\r\n      boxShadow: `${shadow}`,\r\n      padding: 0,\r\n    },\r\n    cardMedia: {\r\n      width: `${imgWidth}px`,\r\n      height: `${imgHeight}px`,\r\n      borderRadius: `${borderRadius}px`,\r\n    },\r\n  });\r\n  const handleScore = (e, newValue) => {\r\n    setScore(newValue);\r\n  };\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} key={movie.id}>\r\n      {imgWidth === \"200\" ? (\r\n        <RatingWheel\r\n          rating={movie.vote_average * 10}\r\n          discover={true}\r\n        ></RatingWheel>\r\n      ) : (\r\n        <RatingWheel rating={movie.vote_average * 10}></RatingWheel>\r\n      )}\r\n\r\n      <ClickAwayListener onClickAway={() => setDropDown(false)}>\r\n        <IconButton\r\n          className=\"dropDownButton\"\r\n          disableFocusRipple\r\n          disableRipple\r\n          onClick={() => setDropDown(true)}\r\n          style={{\r\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n            position: \"absolute\",\r\n            right: \"5px\",\r\n            padding: \"0px\",\r\n            top: \"5px\",\r\n          }}\r\n        >\r\n          {dropDown || <MoreVertIcon />}\r\n          {dropDown && (\r\n            <ButtonGroup\r\n              fullWidth=\"true\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"flex-start\",\r\n                flexGrow: 1,\r\n              }}\r\n              variant=\"contained\"\r\n              orientation=\"vertical\"\r\n              color=\"primary\"\r\n              aria-label=\"vertical outlined primary button group\"\r\n            >\r\n              <Button\r\n                startIcon={<WatchLaterIcon></WatchLaterIcon>}\r\n                onClick={addWatchlist}\r\n              >\r\n                Watchlist\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n                startIcon={<FavoriteIcon></FavoriteIcon>}\r\n                onClick={addFavourite}\r\n              >\r\n                Favorite\r\n              </Button>\r\n              <Button\r\n                onClick={showRater}\r\n                startIcon={<StarIcon></StarIcon>}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n              >\r\n                Rate\r\n              </Button>\r\n              <form\r\n                onSubmit={addRating}\r\n                style={{\r\n                  display: \"none\",\r\n                  backgroundColor: \"white\",\r\n                  width: \"100%\",\r\n                }}\r\n                ref={rater}\r\n              >\r\n                <Slider\r\n                  fullWidth\r\n                  style={{ width: \"80%\" }}\r\n                  value={score}\r\n                  onChange={handleScore}\r\n                  valueLabelDisplay=\"auto\"\r\n                  max=\"10\"\r\n                ></Slider>\r\n                <Button\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                  type=\"submit\"\r\n                  startIcon={<DoneIcon></DoneIcon>}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </form>\r\n            </ButtonGroup>\r\n          )}\r\n        </IconButton>\r\n      </ClickAwayListener>\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/details/${mediaType}/${movie.id}`,\r\n        }}\r\n      >\r\n        {movie.poster_path ? (\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={`https://image.tmdb.org/t/p/w${imgWidth}${movie.poster_path}`}\r\n            title={movie.title}\r\n          ></CardMedia>\r\n        ) : (\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={noImageHolder}\r\n            title={movie.title}\r\n          ></CardMedia>\r\n        )}\r\n      </Link>\r\n\r\n      <CardContent style={{ padding: \"0px\", marginLeft: \"3px\" }}>\r\n        <Link\r\n          props={movie.id}\r\n          to={`/details/${mediaType}/${movie.id}/`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Typography\r\n            className=\"hoverLink\"\r\n            variant=\"body2\"\r\n            color=\"textPrimary\"\r\n            component=\"p\"\r\n            style={{\r\n              \"&:hover\": { cursor: \"pointer\" },\r\n              marginTop: \"3px\",\r\n            }}\r\n          >\r\n            {movie.title}\r\n            {movie.name}\r\n          </Typography>\r\n        </Link>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          style={{ verticalAlign: \"text-bottom\" }}\r\n        >\r\n          {movie.first_air_date && movie.first_air_date.slice(0, 4)}\r\n          {movie.release_date && movie.release_date.slice(0, 4)}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\Credits\\Credits.js",["217","218"],"import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport CreditPerson from \"./CreditsPerson\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { kategorieTeilung } from \"../shared/kategorieTeilung\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst Credits = () => {\r\n  let history = useHistory();\r\n  const credits = history.location.state.credits;\r\n\r\n  //crew categories\r\n\r\n  const categories = kategorieTeilung(credits.crew);\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginTop: \"30px\",\r\n      }}\r\n    >\r\n      <div style={{ width: \"50%\" }}>\r\n        <Typography variant=\"h6\">Actors</Typography>\r\n        {credits.cast.map((actor) => (\r\n          <CreditPerson credits={actor} />\r\n        ))}\r\n      </div>\r\n      <div style={{ width: \"50%\" }}>\r\n        {categories.art.length !== 0 && (\r\n          <Typography variant=\"h6\">Art</Typography>\r\n        )}\r\n        {categories.art.map((art) => (\r\n          <CreditPerson credits={art} />\r\n        ))}\r\n        {categories.camera.length !== 0 && (\r\n          <Typography variant=\"h6\">Camera</Typography>\r\n        )}\r\n        {categories.camera.map((camera) => (\r\n          <CreditPerson credits={camera} />\r\n        ))}\r\n        {categories.crewMembers.length !== 0 && (\r\n          <Typography variant=\"h6\">Crew Members</Typography>\r\n        )}\r\n        {categories.crewMembers.map((crewMembers) => (\r\n          <CreditPerson credits={crewMembers} />\r\n        ))}\r\n\r\n        {categories.costume.length !== 0 && (\r\n          <Typography variant=\"h6\">Costume & Make-Up</Typography>\r\n        )}\r\n        {categories.costume.map((costume) => (\r\n          <CreditPerson credits={costume} />\r\n        ))}\r\n        {categories.directing.length !== 0 && (\r\n          <Typography variant=\"h6\">Directing</Typography>\r\n        )}\r\n        {categories.directing.map((directing) => (\r\n          <CreditPerson credits={directing} />\r\n        ))}\r\n        {categories.editing.length !== 0 && (\r\n          <Typography variant=\"h6\">Editing</Typography>\r\n        )}\r\n        {categories.editing.map((editing) => (\r\n          <CreditPerson credits={editing} />\r\n        ))}\r\n        {categories.lighting.length !== 0 && (\r\n          <Typography variant=\"h6\">Lighting</Typography>\r\n        )}\r\n        {categories.lighting.map((lighting) => (\r\n          <CreditPerson credits={lighting} />\r\n        ))}\r\n        {categories.production.length !== 0 && (\r\n          <Typography variant=\"h6\">Production</Typography>\r\n        )}\r\n        {categories.production.map((production) => (\r\n          <CreditPerson credits={production} />\r\n        ))}\r\n        {categories.sound.length !== 0 && (\r\n          <Typography variant=\"h6\"> Sound</Typography>\r\n        )}\r\n        {categories.sound.map((sound) => (\r\n          <CreditPerson credits={sound} />\r\n        ))}\r\n        {categories.visualEffects.length !== 0 && (\r\n          <Typography variant=\"h6\">Visual Effects</Typography>\r\n        )}\r\n        {categories.visualEffects.map((visualEffects) => (\r\n          <CreditPerson credits={visualEffects} />\r\n        ))}\r\n        {categories.writing.length !== 0 && (\r\n          <Typography variant=\"h6\">Writing</Typography>\r\n        )}\r\n\r\n        {categories.writing.map((writing) => (\r\n          <CreditPerson credits={writing} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\SignedContext.js",[],"C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\LoginApproved.js",["219","220","221"],"import React, { useEffect } from \"react\";\r\nimport { useSignedUpdate, useUsernameUpdate } from \"./contexts/SignedContext\";\r\nimport axios from \"axios\";\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Typography, Container } from \"@material-ui/core\";\r\nconst LoginApproved = () => {\r\n  const setSigned = useSignedUpdate();\r\n  const history = useHistory();\r\n  const setUsername = useUsernameUpdate();\r\n  console.log(history);\r\n  const location = useLocation();\r\n  const token = new URLSearchParams(location.search).get(\"request_token\");\r\n\r\n  const createSessionId = async () => {\r\n    await axios.get(\"http://localhost:5000/getToken/getSessionId\", {\r\n      params: { token: token },\r\n      withCredentials: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    createSessionId();\r\n\r\n    setSigned(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        height: \"60vh\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Login Successful</Typography>\r\n      <Button\r\n        style={{ marginTop: \"20px\" }}\r\n        variant=\"contained\"\r\n        onClick={() => (window.location = \"http://localhost:3000/\")}\r\n      >\r\n        GO BACK\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\nexport default LoginApproved;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\contexts\\DiscoverContext.js",["222"],"import React from \"react\";\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\nconst DiscoverContext = React.createContext();\r\nconst DiscoverContextUpdate = React.createContext();\r\n\r\nexport function useDiscover() {\r\n  return useContext(DiscoverContext);\r\n}\r\n\r\nexport function useDiscoverUpdate() {\r\n  return useContext(DiscoverContextUpdate);\r\n}\r\n\r\nfunction DiscoverProvider({ children }) {\r\n  const [discoverResults, setDiscoverResults] = useState(null);\r\n\r\n  return (\r\n    <DiscoverContext.Provider value={discoverResults}>\r\n      <DiscoverContextUpdate.Provider value={setDiscoverResults}>\r\n        {children}\r\n      </DiscoverContextUpdate.Provider>\r\n    </DiscoverContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DiscoverProvider;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResults.js",["223","224","225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport SearchResultsSide from \"./SearchResultsSide\";\r\nimport PageNumNav from \"./PageNumNav\";\r\nimport { Container, Grid, Typography, Button, Paper } from \"@material-ui/core\";\r\nimport \"../../index.css\";\r\nimport profilePicHolder from \"../../images/profile_pic_holder_w92.png\";\r\nimport posterHolder from \"../../images/no_image_holder_w92.png\";\r\n\r\nconst SearchResults = () => {\r\n  const history = useHistory();\r\n\r\n  const location = useLocation();\r\n  const [searchedMovies, setSearchedMovies] = useState(null);\r\n  const [searchedTv, setSearchedTv] = useState(null);\r\n  const [searchedPeople, setSearchedPeople] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [resultsType, setResultsType] = useState(\"Movies\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [totalResultsMovies, setTotalResultsMovies] = useState(0);\r\n  const [totalPagesMovies, setTotalPagesMovies] = useState(0);\r\n  const [totalResultsTv, setTotalResultsTv] = useState(0);\r\n  const [totalPagesTv, setTotalPagesTv] = useState(0);\r\n  const [totalResultsPeople, setTotalResultsPeople] = useState(0);\r\n  const [totalPagesPeople, setTotalPagesPeople] = useState(0);\r\n\r\n  const fetchMovies = async () => {\r\n    const searchedMovies = await axios.get(\r\n      \"http://localhost:5000/search/movie\",\r\n      {\r\n        params: {\r\n          searchQuery: history.location.state,\r\n          page: currentPage,\r\n        },\r\n      }\r\n    );\r\n    console.log(\"MOVIES\", searchedMovies);\r\n    setSearchedMovies(searchedMovies.data.results);\r\n    setTotalResultsMovies(searchedMovies.data.total_results);\r\n    setTotalPagesMovies(searchedMovies.data.total_pages);\r\n  };\r\n  const fetchTv = async () => {\r\n    const searchedTv = await axios.get(\"http://localhost:5000/search/tv\", {\r\n      params: {\r\n        searchQuery: history.location.state,\r\n        page: currentPage,\r\n      },\r\n    });\r\n    console.log(searchedTv);\r\n    setSearchedTv(searchedTv.data.results);\r\n    setTotalResultsTv(searchedTv.data.total_results);\r\n    setTotalPagesTv(searchedTv.data.total_pages);\r\n  };\r\n  const fetchPeople = async () => {\r\n    const searchedPeople = await axios.get(\r\n      \"http://localhost:5000/search/people\",\r\n      {\r\n        params: {\r\n          searchQuery: history.location.state,\r\n          page: currentPage,\r\n        },\r\n      }\r\n    );\r\n    console.log(\"TV\", searchedPeople);\r\n    setSearchedPeople(searchedPeople.data.results);\r\n    setTotalResultsPeople(searchedPeople.data.total_results);\r\n    setTotalPagesPeople(searchedPeople.data.total_pages);\r\n  };\r\n\r\n  console.log(searchedMovies);\r\n  console.log(searchedTv);\r\n  console.log(searchedPeople);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n    fetchTv();\r\n    fetchPeople();\r\n    setIsLoaded(true);\r\n  }, [location.state]);\r\n\r\n  useEffect(() => {\r\n    if (resultsType === \"Movies\") {\r\n      fetchMovies();\r\n    } else if (resultsType === \"TV\") {\r\n      fetchTv();\r\n    } else if (resultsType === \"People\") {\r\n      fetchPeople();\r\n    }\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"30px\", minHeight: \"60vh\" }}>\r\n      {isLoaded ? (\r\n        <Grid container>\r\n          <Grid xs={12} md={3}>\r\n            <SearchResultsSide\r\n              totalResultsMovies={totalResultsMovies}\r\n              totalResultsPeople={totalResultsPeople}\r\n              totalResultsTv={totalResultsTv}\r\n              setResultsType={setResultsType}\r\n              setCurrentPage={setCurrentPage}\r\n            />\r\n          </Grid>\r\n          <Grid xs={12} md={9}>\r\n            {resultsType === \"Movies\" && (\r\n              <div>\r\n                {console.log(\"SEARVHD MOIS\", searchedMovies)}\r\n                {searchedMovies &&\r\n                  searchedMovies.map((movie) => (\r\n                    <Paper\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {console.log(movie)}\r\n                      <Link\r\n                        to={`/details/movie/${movie.id}`}\r\n                        style={{ height: \"137px\" }}\r\n                      >\r\n                        {movie.poster_path ? (\r\n                          <img\r\n                            className=\"searchPic\"\r\n                            src={`https://image.tmdb.org/t/p/w92/${movie.poster_path}`}\r\n                          ></img>\r\n                        ) : (\r\n                          <img className=\"searchPic\" src={posterHolder}></img>\r\n                        )}\r\n                      </Link>\r\n                      <div>\r\n                        <Link\r\n                          to={`/details/movie/${movie.id}`}\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                          }}\r\n                        >\r\n                          <Typography\r\n                            className=\"hoverStyleTitle\"\r\n                            variant=\"h6\"\r\n                            style={{\r\n                              margin: \"5px 0px 5px 10px\",\r\n                              color: \"black\",\r\n                            }}\r\n                          >\r\n                            {movie.title}\r\n                          </Typography>\r\n                        </Link>\r\n                        {movie.release_date ? (\r\n                          <Typography style={{ margin: \"5px 0px 5px 10px\" }}>\r\n                            {movie.release_date.slice(0, 4)}\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ margin: \"5px 0px 5px 10px\" }}>\r\n                            Not Released\r\n                          </Typography>\r\n                        )}\r\n                      </div>\r\n                    </Paper>\r\n                  ))}\r\n                <PageNumNav\r\n                  setCurrentPage={setCurrentPage}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPagesMovies}\r\n                />\r\n              </div>\r\n            )}\r\n            {resultsType === \"TV\" && (\r\n              <div>\r\n                {searchedTv.map((tv) => (\r\n                  <Paper\r\n                    style={{\r\n                      display: \"flex\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                  >\r\n                    {console.log(tv)}\r\n                    <Link\r\n                      to={`/details/tv/${tv.id}`}\r\n                      style={{ height: \"137px\" }}\r\n                    >\r\n                      {tv.poster_path ? (\r\n                        <img\r\n                          className=\"searchPic\"\r\n                          src={`https://image.tmdb.org/t/p/w92/${tv.poster_path}`}\r\n                        ></img>\r\n                      ) : (\r\n                        <img className=\"searchPic\" src={posterHolder}></img>\r\n                      )}\r\n                    </Link>\r\n                    <div>\r\n                      <Link\r\n                        to={`/details/movie/${tv.id}`}\r\n                        style={{ color: \"black\", textDecoration: \"none\" }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          className=\"hoverStyleTitle\"\r\n                          style={{ margin: \"5px 0px 5px 10px\" }}\r\n                        >\r\n                          {tv.name}\r\n                        </Typography>\r\n                      </Link>\r\n                      {tv.first_air_date ? (\r\n                        <Typography style={{ margin: \"5px 0px 5px 10px\" }}>\r\n                          {tv.first_air_date.slice(0, 4)}\r\n                        </Typography>\r\n                      ) : (\r\n                        <Typography style={{ margin: \"5px 0px 5px 10px\" }}>\r\n                          Not Released\r\n                        </Typography>\r\n                      )}\r\n                    </div>\r\n                  </Paper>\r\n                ))}\r\n                <PageNumNav\r\n                  setCurrentPage={setCurrentPage}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPagesTv}\r\n                />\r\n              </div>\r\n            )}\r\n            {resultsType === \"People\" && (\r\n              <div>\r\n                {searchedPeople.map((person) => (\r\n                  <Paper\r\n                    style={{\r\n                      display: \"flex\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                  >\r\n                    {console.log(person)}\r\n                    <Link\r\n                      to={`/actor/${person.id}`}\r\n                      style={{ height: \"137px\" }}\r\n                    >\r\n                      {person.profile_path ? (\r\n                        <img\r\n                          className=\"searchPic\"\r\n                          src={`https://image.tmdb.org/t/p/w92/${person.profile_path}`}\r\n                        ></img>\r\n                      ) : (\r\n                        <img className=\"searchPic\" src={profilePicHolder}></img>\r\n                      )}\r\n                    </Link>\r\n                    <div>\r\n                      <Link\r\n                        to={`/actor/${person.id}`}\r\n                        style={{ color: \"black\", textDecoration: \"none\" }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          className=\"hoverStyleTitle\"\r\n                          style={{ margin: \"5px 0px 5px 10px\" }}\r\n                        >\r\n                          {person.name}\r\n                        </Typography>\r\n                      </Link>\r\n                      <Typography style={{ margin: \"5px 0px 5px 10px\" }}>\r\n                        {person.known_for_department}\r\n                      </Typography>\r\n                    </div>\r\n                  </Paper>\r\n                ))}\r\n                <PageNumNav\r\n                  setCurrentPage={setCurrentPage}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPagesPeople}\r\n                />\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <div className=\"spinner\"></div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResult.js",["234"],"import React from \"react\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst SearchResult = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default SearchResult;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\SearchResultsSide.js",["235"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Button, Paper } from \"@material-ui/core\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst SearchResultsSide = ({\r\n  totalResultsTv,\r\n  totalResultsMovies,\r\n  totalResultsPeople,\r\n  setResultsType,\r\n  setCurrentPage,\r\n}) => {\r\n  console.log(totalResultsPeople);\r\n  const [categories, setCategories] = useState([]);\r\n  console.log(\"hhe\", totalResultsPeople);\r\n\r\n  useEffect(() => {\r\n    console.log(categories);\r\n    console.log(totalResultsPeople);\r\n    setCategories(\r\n      [\r\n        {\r\n          category: \"Movies\",\r\n          totalResults: totalResultsMovies,\r\n        },\r\n        {\r\n          category: \"TV\",\r\n          totalResults: totalResultsTv,\r\n        },\r\n        {\r\n          category: \"People\",\r\n          totalResults: totalResultsPeople,\r\n        },\r\n      ].sort((a, b) => (a.totalResults < b.totalResults ? 1 : -1)),\r\n      () => {\r\n        setResultsType(categories[0].category);\r\n      }\r\n    );\r\n  }, [totalResultsTv, totalResultsMovies, totalResultsPeople]);\r\n  console.log(\"CATE\", categories);\r\n  return (\r\n    <div>\r\n      <Paper style={{ width: \"250px\" }}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          style={{\r\n            padding: \"10px\",\r\n            backgroundColor: \"#01B4E4\",\r\n            color: \"white\",\r\n            borderRadius: \"5px 5px 0 0\",\r\n          }}\r\n        >\r\n          Search Categories\r\n        </Typography>\r\n        {categories.map((category) => (\r\n          <div\r\n            className=\"hoverStyle\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px 5px 10px\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"text\"\r\n              onClick={() => {\r\n                setCurrentPage(1);\r\n                setResultsType(category.category);\r\n              }}\r\n            >\r\n              {category.category}\r\n            </Button>\r\n            <Typography\r\n              className=\"results\"\r\n              style={{ padding: \"0 13px 0 13px\", borderRadius: \"15px\" }}\r\n            >\r\n              {category.totalResults}\r\n            </Typography>\r\n          </div>\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsSide;\r\n","C:\\Users\\roman\\Documents\\Code\\MERNtraining\\zmdbi\\client\\src\\components\\SearchPage\\PageNumNav.js",["236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":6,"column":17,"nodeType":"243","messageId":"244","endLine":6,"endColumn":25},{"ruleId":"241","severity":1,"message":"245","line":17,"column":10,"nodeType":"243","messageId":"244","endLine":17,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":33,"column":9,"nodeType":"248","endLine":40,"endColumn":11},{"ruleId":"241","severity":1,"message":"249","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":19},{"ruleId":"241","severity":1,"message":"250","line":3,"column":21,"nodeType":"243","messageId":"244","endLine":3,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":58,"column":15,"nodeType":"248","endLine":61,"endColumn":16},{"ruleId":"241","severity":1,"message":"251","line":3,"column":22,"nodeType":"243","messageId":"244","endLine":3,"endColumn":27},{"ruleId":"246","severity":1,"message":"247","line":68,"column":11,"nodeType":"248","endLine":73,"endColumn":12},{"ruleId":"246","severity":1,"message":"247","line":75,"column":11,"nodeType":"248","endLine":82,"endColumn":12},{"ruleId":"241","severity":1,"message":"250","line":5,"column":10,"nodeType":"243","messageId":"244","endLine":5,"endColumn":23},{"ruleId":"241","severity":1,"message":"252","line":44,"column":18,"nodeType":"243","messageId":"244","endLine":44,"endColumn":27},{"ruleId":"253","severity":1,"message":"254","line":69,"column":26,"nodeType":"255","messageId":"256","endLine":69,"endColumn":61},{"ruleId":"253","severity":1,"message":"254","line":104,"column":28,"nodeType":"255","messageId":"256","endLine":104,"endColumn":63},{"ruleId":"257","severity":1,"message":"258","line":132,"column":6,"nodeType":"259","endLine":132,"endColumn":8,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"261","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":15},{"ruleId":"241","severity":1,"message":"262","line":8,"column":10,"nodeType":"243","messageId":"244","endLine":8,"endColumn":26},{"ruleId":"257","severity":1,"message":"263","line":116,"column":6,"nodeType":"259","endLine":116,"endColumn":8,"suggestions":"264"},{"ruleId":"246","severity":1,"message":"247","line":130,"column":15,"nodeType":"248","endLine":133,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"265","line":34,"column":6,"nodeType":"259","endLine":34,"endColumn":8,"suggestions":"266"},{"ruleId":"241","severity":1,"message":"267","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":19},{"ruleId":"241","severity":1,"message":"268","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"269","line":6,"column":16,"nodeType":"243","messageId":"244","endLine":6,"endColumn":23},{"ruleId":"241","severity":1,"message":"270","line":4,"column":40,"nodeType":"243","messageId":"244","endLine":4,"endColumn":44},{"ruleId":"241","severity":1,"message":"271","line":25,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":95,"column":21,"nodeType":"248","endLine":98,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"257","severity":1,"message":"272","line":48,"column":6,"nodeType":"259","endLine":48,"endColumn":8,"suggestions":"273"},{"ruleId":"241","severity":1,"message":"274","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":48,"column":17,"nodeType":"248","endLine":54,"endColumn":19},{"ruleId":"241","severity":1,"message":"275","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":23},{"ruleId":"241","severity":1,"message":"251","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":20,"column":11,"nodeType":"248","endLine":23,"endColumn":12},{"ruleId":"246","severity":1,"message":"247","line":25,"column":11,"nodeType":"248","endLine":28,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":16,"column":22,"nodeType":"278","messageId":"279","endLine":16,"endColumn":24},{"ruleId":"241","severity":1,"message":"267","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":15,"column":7,"nodeType":"248","endLine":15,"endColumn":54},{"ruleId":"241","severity":1,"message":"280","line":5,"column":10,"nodeType":"243","messageId":"244","endLine":5,"endColumn":18},{"ruleId":"241","severity":1,"message":"281","line":12,"column":3,"nodeType":"243","messageId":"244","endLine":12,"endColumn":12},{"ruleId":"241","severity":1,"message":"282","line":17,"column":10,"nodeType":"243","messageId":"244","endLine":17,"endColumn":20},{"ruleId":"241","severity":1,"message":"283","line":17,"column":22,"nodeType":"243","messageId":"244","endLine":17,"endColumn":38},{"ruleId":"241","severity":1,"message":"284","line":27,"column":10,"nodeType":"243","messageId":"244","endLine":27,"endColumn":17},{"ruleId":"241","severity":1,"message":"285","line":52,"column":10,"nodeType":"243","messageId":"244","endLine":52,"endColumn":15},{"ruleId":"241","severity":1,"message":"286","line":53,"column":10,"nodeType":"243","messageId":"244","endLine":53,"endColumn":20},{"ruleId":"241","severity":1,"message":"287","line":53,"column":22,"nodeType":"243","messageId":"244","endLine":53,"endColumn":35},{"ruleId":"241","severity":1,"message":"288","line":83,"column":11,"nodeType":"243","messageId":"244","endLine":83,"endColumn":17},{"ruleId":"241","severity":1,"message":"289","line":106,"column":10,"nodeType":"243","messageId":"244","endLine":106,"endColumn":24},{"ruleId":"241","severity":1,"message":"290","line":106,"column":26,"nodeType":"243","messageId":"244","endLine":106,"endColumn":43},{"ruleId":"257","severity":1,"message":"291","line":110,"column":6,"nodeType":"259","endLine":110,"endColumn":14,"suggestions":"292"},{"ruleId":"241","severity":1,"message":"293","line":22,"column":7,"nodeType":"243","messageId":"244","endLine":22,"endColumn":15},{"ruleId":"241","severity":1,"message":"294","line":44,"column":18,"nodeType":"243","messageId":"244","endLine":44,"endColumn":27},{"ruleId":"241","severity":1,"message":"295","line":47,"column":10,"nodeType":"243","messageId":"244","endLine":47,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":54,"column":19,"nodeType":"255","messageId":"298","endLine":54,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":110,"column":21,"nodeType":"255","messageId":"298","endLine":110,"endColumn":23},{"ruleId":"257","severity":1,"message":"299","line":154,"column":6,"nodeType":"259","endLine":154,"endColumn":18,"suggestions":"300"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"301","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":20},{"ruleId":"241","severity":1,"message":"302","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":20},{"ruleId":"241","severity":1,"message":"303","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":17},{"ruleId":"241","severity":1,"message":"304","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":19},{"ruleId":"241","severity":1,"message":"305","line":14,"column":8,"nodeType":"243","messageId":"244","endLine":14,"endColumn":13},{"ruleId":"241","severity":1,"message":"306","line":33,"column":9,"nodeType":"243","messageId":"244","endLine":33,"endColumn":17},{"ruleId":"241","severity":1,"message":"307","line":34,"column":9,"nodeType":"243","messageId":"244","endLine":34,"endColumn":14},{"ruleId":"308","severity":1,"message":"309","line":41,"column":19,"nodeType":"310","messageId":"311","endLine":41,"endColumn":30},{"ruleId":"257","severity":1,"message":"312","line":66,"column":6,"nodeType":"259","endLine":66,"endColumn":8,"suggestions":"313"},{"ruleId":"241","severity":1,"message":"249","line":19,"column":16,"nodeType":"243","messageId":"244","endLine":19,"endColumn":25},{"ruleId":"241","severity":1,"message":"314","line":2,"column":22,"nodeType":"243","messageId":"244","endLine":2,"endColumn":26},{"ruleId":"241","severity":1,"message":"301","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":20},{"ruleId":"241","severity":1,"message":"249","line":4,"column":10,"nodeType":"243","messageId":"244","endLine":4,"endColumn":19},{"ruleId":"241","severity":1,"message":"315","line":10,"column":9,"nodeType":"243","messageId":"244","endLine":10,"endColumn":20},{"ruleId":"257","severity":1,"message":"316","line":26,"column":6,"nodeType":"259","endLine":26,"endColumn":8,"suggestions":"317"},{"ruleId":"241","severity":1,"message":"275","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":23},{"ruleId":"241","severity":1,"message":"280","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":18},{"ruleId":"241","severity":1,"message":"318","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":20},{"ruleId":"241","severity":1,"message":"319","line":7,"column":39,"nodeType":"243","messageId":"244","endLine":7,"endColumn":45},{"ruleId":"257","severity":1,"message":"320","line":83,"column":6,"nodeType":"259","endLine":83,"endColumn":22,"suggestions":"321"},{"ruleId":"257","severity":1,"message":"322","line":93,"column":6,"nodeType":"259","endLine":93,"endColumn":19,"suggestions":"323"},{"ruleId":"246","severity":1,"message":"247","line":126,"column":27,"nodeType":"248","endLine":129,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":131,"column":27,"nodeType":"248","endLine":131,"endColumn":73},{"ruleId":"246","severity":1,"message":"247","line":186,"column":25,"nodeType":"248","endLine":189,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":191,"column":25,"nodeType":"248","endLine":191,"endColumn":71},{"ruleId":"246","severity":1,"message":"247","line":241,"column":25,"nodeType":"248","endLine":244,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":246,"column":25,"nodeType":"248","endLine":246,"endColumn":75},{"ruleId":"241","severity":1,"message":"324","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":21},{"ruleId":"257","severity":1,"message":"325","line":39,"column":6,"nodeType":"259","endLine":39,"endColumn":62,"suggestions":"326"},{"ruleId":"276","severity":1,"message":"327","line":21,"column":40,"nodeType":"278","messageId":"328","endLine":21,"endColumn":42},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'blue' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'Paper' is defined but never used.","'setWriter' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovie'. Either include it or remove the dependency array.","ArrayExpression",["331"],"'Credits' is defined but never used.","'kategorieTeilung' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchActorDetails' and 'fetchAllCredits'. Either include them or remove the dependency array.",["332"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["333"],"'Container' is defined but never used.","'year' is assigned a value but never used.","'setYear' is assigned a value but never used.","'Grid' is defined but never used.","'items' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'radius' and 'rating'. Either include them or remove the dependency array.",["334"],"'CreditPerson' is defined but never used.","'createContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Redirect' is defined but never used.","'useUserId' is defined but never used.","'useSession' is defined but never used.","'useSessionUpdate' is defined but never used.","'NavLink' is defined but never used.","'token' is assigned a value but never used.","'accDetails' is assigned a value but never used.","'setAccDetails' is assigned a value but never used.","'logout' is assigned a value but never used.","'switchToSearch' is assigned a value but never used.","'setSwitchToSearch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkSigned' and 'getAccDetails'. Either include them or remove the dependency array.",["335"],"'loadMore' is assigned a value but never used.","'setGenres' is assigned a value but never used.","'totalResults' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'submitHandle'. Either include it or remove the dependency array.",["336"],"'makeStyles' is defined but never used.","'DateFnsUtils' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'axios' is defined but never used.","'setPosts' is assigned a value but never used.","'posts' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'defaultSortMode'. Either include it or remove the dependency array.",["337"],"'Link' is defined but never used.","'setUsername' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createSessionId' and 'setSigned'. Either include them or remove the dependency array.",["338"],"'SearchResult' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchMovies', 'fetchPeople', and 'fetchTv'. Either include them or remove the dependency array.",["339"],"React Hook useEffect has missing dependencies: 'fetchMovies', 'fetchPeople', 'fetchTv', and 'resultsType'. Either include them or remove the dependency array.",["340"],"'SearchResults' is defined but never used.","React Hook useEffect has missing dependencies: 'categories' and 'setResultsType'. Either include them or remove the dependency array. If 'setResultsType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["341"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [fetchMovie]",{"range":"364","text":"365"},"Update the dependencies array to be: [fetchActorDetails, fetchAllCredits]",{"range":"366","text":"367"},"Update the dependencies array to be: [fetchData]",{"range":"368","text":"369"},"Update the dependencies array to be: [radius, rating]",{"range":"370","text":"371"},"Update the dependencies array to be: [checkSigned, getAccDetails, signed]",{"range":"372","text":"373"},"Update the dependencies array to be: [sortOption, submitHandle]",{"range":"374","text":"375"},"Update the dependencies array to be: [defaultSortMode]",{"range":"376","text":"377"},"Update the dependencies array to be: [createSessionId, setSigned]",{"range":"378","text":"379"},"Update the dependencies array to be: [fetchMovies, fetchPeople, fetchTv, location.state]",{"range":"380","text":"381"},"Update the dependencies array to be: [currentPage, fetchMovies, fetchPeople, fetchTv, resultsType]",{"range":"382","text":"383"},"Update the dependencies array to be: [totalResultsTv, totalResultsMovies, totalResultsPeople, categories, setResultsType]",{"range":"384","text":"385"},[3663,3665],"[fetchMovie]",[3661,3663],"[fetchActorDetails, fetchAllCredits]",[883,885],"[fetchData]",[1305,1307],"[radius, rating]",[2794,2802],"[checkSigned, getAccDetails, signed]",[4820,4832],"[sortOption, submitHandle]",[1830,1832],"[defaultSortMode]",[844,846],"[createSessionId, setSigned]",[2960,2976],"[fetchMovies, fetchPeople, fetchTv, location.state]",[3198,3211],"[currentPage, fetchMovies, fetchPeople, fetchTv, resultsType]",[983,1039],"[totalResultsTv, totalResultsMovies, totalResultsPeople, categories, setResultsType]"]